{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a full-stack corporate website for SUMERICA, a Chilean industrial supplier specializing in HVAC/climatization and telecommunications equipment. The application is built with React frontend and Express backend, targeting both B2B corporate clients (mining/construction companies) and B2C customers. The site features a product catalog, quote generation system, and contact functionality with a modern, professional design using SUMERICA's yellow and black branding.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript and Vite for development/build tooling\n- **Routing**: Wouter for client-side routing (lightweight alternative to React Router)\n- **State Management**: React Context for quote cart functionality, React Query for server state\n- **UI Components**: Shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom CSS variables for theming, Montserrat font family\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n## Backend Architecture\n- **Framework**: Express.js with TypeScript\n- **Database ORM**: Drizzle ORM with PostgreSQL dialect for type-safe database operations\n- **Storage**: Currently using in-memory storage with interface pattern for easy database migration\n- **API Design**: RESTful endpoints for products, quotes, and contacts\n- **Validation**: Zod schemas shared between frontend and backend for consistent validation\n\n## Database Schema\nThe application defines four main entities:\n- **Users**: Basic user authentication (id, username, password)\n- **Products**: Product catalog (id, name, category, brand, description, imageUrl, code)\n- **Quotes**: Quote requests (id, customer info, products array, status, timestamp)\n- **Contacts**: Contact form submissions (id, name, email, subject, message, timestamp)\n\n## Key Features\n- **Product Catalog**: Searchable and filterable product listings with category/brand filters\n- **Quote System**: Shopping cart-like functionality for building quote requests\n- **Contact Forms**: Both general contact and quote-specific forms\n- **Responsive Design**: Mobile-first approach with desktop optimizations\n- **Performance**: Image optimization, lazy loading, and efficient state management\n\n## Design Patterns\n- **Component Composition**: Reusable UI components following single responsibility principle\n- **Hook Pattern**: Custom hooks for cart management and mobile detection\n- **Provider Pattern**: Context providers for global state (quote cart, toast notifications)\n- **Repository Pattern**: Storage interface allows switching between in-memory and database storage\n\n# External Dependencies\n\n## Core Dependencies\n- **@neondatabase/serverless**: PostgreSQL database connectivity optimized for serverless\n- **@tanstack/react-query**: Server state management and caching\n- **@radix-ui/***: Headless UI component primitives for accessibility\n- **drizzle-orm**: Type-safe ORM for PostgreSQL with Zod integration\n- **react-hook-form**: Performant form library with minimal re-renders\n- **wouter**: Lightweight routing library for React\n\n## Development Tools\n- **Vite**: Fast development server and build tool\n- **TypeScript**: Static typing for better developer experience\n- **Tailwind CSS**: Utility-first CSS framework\n- **ESBuild**: Fast JavaScript bundler for production builds\n\n## UI/UX Libraries\n- **class-variance-authority**: Type-safe component variants\n- **clsx & tailwind-merge**: Conditional CSS class composition\n- **lucide-react**: Consistent icon set\n- **embla-carousel-react**: Touch-friendly carousel component\n\n## Validation & Forms\n- **zod**: Schema validation library\n- **@hookform/resolvers**: React Hook Form integration with Zod\n- **drizzle-zod**: Generate Zod schemas from Drizzle database schemas\n\nThe application is configured for deployment on Replit with development-specific tooling and optimizations for the platform's environment.","size_bytes":4022},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2755},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertQuoteSchema, insertContactSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  \n  // Get all products\n  app.get(\"/api/products\", async (req, res) => {\n    try {\n      const products = await storage.getProducts();\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch products\" });\n    }\n  });\n\n  // Search products - MUST come before /:id route to avoid conflicts\n  app.get(\"/api/products/search\", async (req, res) => {\n    try {\n      const { q } = req.query;\n      if (!q || typeof q !== 'string') {\n        return res.status(400).json({ message: \"Query parameter 'q' is required\" });\n      }\n      const products = await storage.searchProducts(q);\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to search products\" });\n    }\n  });\n\n  // Get products by category - MUST come before /:id route to avoid conflicts\n  app.get(\"/api/products/category/:category\", async (req, res) => {\n    try {\n      const { category } = req.params;\n      const products = await storage.getProductsByCategory(category);\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch products by category\" });\n    }\n  });\n\n  // Get products by brand - MUST come before /:id route to avoid conflicts\n  app.get(\"/api/products/brand/:brand\", async (req, res) => {\n    try {\n      const { brand } = req.params;\n      const products = await storage.getProductsByBrand(brand);\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch products by brand\" });\n    }\n  });\n\n  // Get single product by ID - MUST come LAST after all specific routes\n  app.get(\"/api/products/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const product = await storage.getProduct(id);\n      if (!product) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch product\" });\n    }\n  });\n\n  // Create quote request\n  app.post(\"/api/quotes\", async (req, res) => {\n    try {\n      const validatedData = insertQuoteSchema.parse(req.body);\n      const quote = await storage.createQuote(validatedData);\n      res.status(201).json(quote);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid quote data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create quote\" });\n    }\n  });\n\n  // Get all quotes (for admin purposes)\n  app.get(\"/api/quotes\", async (req, res) => {\n    try {\n      const quotes = await storage.getQuotes();\n      res.json(quotes);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch quotes\" });\n    }\n  });\n\n  // Create contact message\n  app.post(\"/api/contacts\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(validatedData);\n      res.status(201).json(contact);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid contact data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create contact message\" });\n    }\n  });\n\n  // Get all contacts (for admin purposes)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json(contacts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch contacts\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":3916},"server/storage.ts":{"content":"import { type User, type InsertUser, type Product, type InsertProduct, type Quote, type InsertQuote, type Contact, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  getProducts(): Promise<Product[]>;\n  getProduct(id: string): Promise<Product | undefined>;\n  createProduct(product: InsertProduct): Promise<Product>;\n  searchProducts(query: string): Promise<Product[]>;\n  getProductsByCategory(category: string): Promise<Product[]>;\n  getProductsByBrand(brand: string): Promise<Product[]>;\n  \n  createQuote(quote: InsertQuote): Promise<Quote>;\n  getQuotes(): Promise<Quote[]>;\n  \n  createContact(contact: InsertContact): Promise<Contact>;\n  getContacts(): Promise<Contact[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private products: Map<string, Product>;\n  private quotes: Map<string, Quote>;\n  private contacts: Map<string, Contact>;\n\n  constructor() {\n    this.users = new Map();\n    this.products = new Map();\n    this.quotes = new Map();\n    this.contacts = new Map();\n    \n    // Initialize with sample products\n    this.initializeProducts();\n  }\n\n  private initializeProducts() {\n    const sampleProducts: Omit<Product, 'id'>[] = [\n      {\n        name: \"Aire Acondicionado 24000 BTU\",\n        category: \"Climatización\",\n        brand: \"Carrier\",\n        description: \"Sistema de aire acondicionado industrial de 24000 BTU para espacios grandes\",\n        imageUrl: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"AC-24K-CAR\"\n      },\n      {\n        name: \"Router Industrial Cisco\",\n        category: \"Telecomunicaciones\",\n        brand: \"Cisco\",\n        description: \"Router industrial para comunicaciones críticas\",\n        imageUrl: \"https://images.unsplash.com/photo-1606904825846-647eb07f5be2?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"RTR-IND-CIS\"\n      },\n      {\n        name: \"Casco de Seguridad\",\n        category: \"EPP y Seguridad\",\n        brand: \"3M\",\n        description: \"Casco de protección personal para trabajos industriales\",\n        imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"CAS-SEG-3M\"\n      },\n      {\n        name: \"Taladro Industrial\",\n        category: \"Ferretería Industrial\",\n        brand: \"Bosch\",\n        description: \"Taladro de alta potencia para aplicaciones industriales\",\n        imageUrl: \"https://images.unsplash.com/photo-1572981779307-38b8cabb2407?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"TAL-IND-BOS\"\n      },\n      {\n        name: \"Sistema HVAC Industrial\",\n        category: \"Climatización\",\n        brand: \"Trane\",\n        description: \"Sistema completo de climatización para instalaciones industriales\",\n        imageUrl: \"https://images.unsplash.com/photo-1621905251189-08b45d6a269e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"HVAC-IND-TRA\"\n      },\n      {\n        name: \"Antena de Telecomunicaciones\",\n        category: \"Telecomunicaciones\",\n        brand: \"Motorola\",\n        description: \"Antena de alta ganancia para comunicaciones móviles\",\n        imageUrl: \"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n        code: \"ANT-TEL-MOT\"\n      }\n    ];\n\n    sampleProducts.forEach(product => {\n      const id = randomUUID();\n      this.products.set(id, { ...product, id });\n    });\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getProducts(): Promise<Product[]> {\n    return Array.from(this.products.values());\n  }\n\n  async getProduct(id: string): Promise<Product | undefined> {\n    return this.products.get(id);\n  }\n\n  async createProduct(insertProduct: InsertProduct): Promise<Product> {\n    const id = randomUUID();\n    const product: Product = { \n      ...insertProduct, \n      id,\n      description: insertProduct.description ?? null,\n      imageUrl: insertProduct.imageUrl ?? null,\n      code: insertProduct.code ?? null\n    };\n    this.products.set(id, product);\n    return product;\n  }\n\n  async searchProducts(query: string): Promise<Product[]> {\n    const lowerQuery = query.toLowerCase();\n    return Array.from(this.products.values()).filter(product =>\n      product.name.toLowerCase().includes(lowerQuery) ||\n      product.brand.toLowerCase().includes(lowerQuery) ||\n      product.code?.toLowerCase().includes(lowerQuery) ||\n      product.description?.toLowerCase().includes(lowerQuery)\n    );\n  }\n\n  async getProductsByCategory(category: string): Promise<Product[]> {\n    return Array.from(this.products.values()).filter(product =>\n      product.category === category\n    );\n  }\n\n  async getProductsByBrand(brand: string): Promise<Product[]> {\n    return Array.from(this.products.values()).filter(product =>\n      product.brand === brand\n    );\n  }\n\n  async createQuote(insertQuote: InsertQuote): Promise<Quote> {\n    const id = randomUUID();\n    const quote: Quote = { \n      ...insertQuote,\n      id, \n      status: \"pending\",\n      createdAt: new Date(),\n      company: insertQuote.company ?? null\n    };\n    this.quotes.set(id, quote);\n    return quote;\n  }\n\n  async getQuotes(): Promise<Quote[]> {\n    return Array.from(this.quotes.values());\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact, \n      id, \n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":6328},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n    \n    // Skip API routes - let them be handled by the API router\n    if (url.startsWith('/api/')) {\n      return next();\n    }\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2393},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, jsonb, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const products = pgTable(\"products\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  category: text(\"category\").notNull(),\n  brand: text(\"brand\").notNull(),\n  description: text(\"description\"),\n  imageUrl: text(\"image_url\"),\n  code: text(\"code\"),\n  // Technical specifications\n  specifications: jsonb(\"specifications\"), // Technical specs object\n  dimensions: jsonb(\"dimensions\"), // Dimensions and weight\n  materials: text(\"materials\").array(), // Construction materials array\n  certifications: text(\"certifications\").array(), // Safety certifications\n  applications: text(\"applications\").array(), // Recommended uses\n  features: text(\"features\").array(), // Key features/benefits\n  warranty: text(\"warranty\"), // Warranty information\n  installationGuide: text(\"installation_guide\"), // Installation instructions\n  dataSheetUrl: text(\"data_sheet_url\"), // URL to PDF datasheet\n  // Additional product info\n  model: text(\"model\"), // Model number\n  series: text(\"series\"), // Product series\n  availability: text(\"availability\").default(\"available\"), // Stock status\n  priceCents: integer(\"price_cents\"), // Price in cents (null = quote only)\n  currency: text(\"currency\").default(\"CLP\"), // Currency code\n  pricingModel: text(\"pricing_model\").default(\"quote\"), // 'quote' | 'fixed'\n  minOrderQuantity: integer(\"min_order_quantity\").default(1),\n});\n\nexport const quotes = pgTable(\"quotes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  phone: text(\"phone\").notNull(),\n  products: jsonb(\"products\").notNull(), // Array of {productId, quantity, unitPriceCents?, notes?}\n  customerMessage: text(\"customer_message\"), // Optional customer requirements/notes\n  status: text(\"status\").notNull().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Zod schemas for structured JSON fields\nexport const dimensionsSchema = z.object({\n  width: z.number().positive(),\n  height: z.number().positive(),\n  depth: z.number().positive().optional(),\n  weight: z.number().positive().optional(),\n  unit: z.enum(['mm', 'cm', 'in', 'm']).default('cm'),\n  weightUnit: z.enum(['kg', 'lb', 'g']).default('kg'),\n});\n\nexport const specificationsSchema = z.record(z.string(), z.union([z.string(), z.number(), z.boolean()]));\n\nexport const quoteItemSchema = z.object({\n  productId: z.string(),\n  quantity: z.number().int().positive(),\n  unitPriceCents: z.number().int().positive().optional(),\n  notes: z.string().optional(),\n});\n\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n}).extend({\n  specifications: specificationsSchema.optional(),\n  dimensions: dimensionsSchema.optional(),\n});\n\nexport const insertQuoteSchema = createInsertSchema(quotes).omit({\n  id: true,\n  createdAt: true,\n  status: true,\n}).extend({\n  products: z.array(quoteItemSchema),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\nexport type Product = typeof products.$inferSelect;\nexport type Dimensions = z.infer<typeof dimensionsSchema>;\nexport type Specifications = z.infer<typeof specificationsSchema>;\nexport type QuoteItem = z.infer<typeof quoteItemSchema>;\n\nexport type InsertQuote = z.infer<typeof insertQuoteSchema>;\nexport type Quote = typeof quotes.$inferSelect;\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n","size_bytes":4522},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Catalog from \"@/pages/catalog\";\nimport Contact from \"@/pages/contact\";\nimport Services from \"@/pages/services\";\nimport Industries from \"@/pages/industries\";\nimport ProductPage from \"@/pages/product\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport FloatingWhatsApp from \"@/components/layout/floating-whatsapp\";\nimport { QuoteCartProvider } from \"@/hooks/use-quote-cart\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/catalog\" component={Catalog} />\n          <Route path=\"/product/:id\" component={ProductPage} />\n          <Route path=\"/servicios\" component={Services} />\n          <Route path=\"/industrias\" component={Industries} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n      <FloatingWhatsApp />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <QuoteCartProvider>\n          <Toaster />\n          <Router />\n        </QuoteCartProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1675},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(0 0% 0%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(0 0% 0%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(0 0% 0%);\n  --primary: hsl(48 100% 50%);\n  --primary-foreground: hsl(0 0% 0%);\n  --secondary: hsl(0 0% 96%);\n  --secondary-foreground: hsl(0 0% 0%);\n  --muted: hsl(0 0% 96%);\n  --muted-foreground: hsl(0 0% 45%);\n  --accent: hsl(48 100% 50%);\n  --accent-foreground: hsl(0 0% 0%);\n  --destructive: hsl(0 84% 60%);\n  --destructive-foreground: hsl(0 0% 98%);\n  --border: hsl(0 0% 89%);\n  --input: hsl(0 0% 89%);\n  --ring: hsl(48 100% 50%);\n  --chart-1: hsl(48 100% 50%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(0 0% 96%);\n  --sidebar-foreground: hsl(0 0% 0%);\n  --sidebar-primary: hsl(48 100% 50%);\n  --sidebar-primary-foreground: hsl(0 0% 0%);\n  --sidebar-accent: hsl(0 0% 92%);\n  --sidebar-accent-foreground: hsl(48 100% 50%);\n  --sidebar-border: hsl(0 0% 89%);\n  --sidebar-ring: hsl(48 100% 50%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n}\n\n.dark {\n  --background: hsl(0 0% 3.9%);\n  --foreground: hsl(0 0% 98%);\n  --card: hsl(0 0% 3.9%);\n  --card-foreground: hsl(0 0% 98%);\n  --popover: hsl(0 0% 3.9%);\n  --popover-foreground: hsl(0 0% 98%);\n  --primary: hsl(48 100% 50%);\n  --primary-foreground: hsl(0 0% 0%);\n  --secondary: hsl(0 0% 14.9%);\n  --secondary-foreground: hsl(0 0% 98%);\n  --muted: hsl(0 0% 14.9%);\n  --muted-foreground: hsl(0 0% 63.9%);\n  --accent: hsl(48 100% 50%);\n  --accent-foreground: hsl(0 0% 0%);\n  --destructive: hsl(0 62.8% 30.6%);\n  --destructive-foreground: hsl(0 0% 98%);\n  --border: hsl(0 0% 14.9%);\n  --input: hsl(0 0% 14.9%);\n  --ring: hsl(48 100% 50%);\n  --chart-1: hsl(48 100% 50%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(0 0% 3.9%);\n  --sidebar-foreground: hsl(0 0% 98%);\n  --sidebar-primary: hsl(48 100% 50%);\n  --sidebar-primary-foreground: hsl(0 0% 0%);\n  --sidebar-accent: hsl(0 0% 14.9%);\n  --sidebar-accent-foreground: hsl(48 100% 50%);\n  --sidebar-border: hsl(0 0% 14.9%);\n  --sidebar-ring: hsl(48 100% 50%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.sumerica-yellow {\n  background-color: #ffc800;\n  color: #000000;\n}\n\n.sumerica-yellow:hover {\n  background-color: #e6b500;\n}\n\n.hero-carousel {\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  transition: background-image 0.5s ease-in-out;\n}\n\n.category-card:hover {\n  transform: translateY(-4px);\n  transition: transform 0.3s ease;\n}\n\n.featured-category {\n  border: 2px solid #ffc800;\n}\n","size_bytes":3170},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/hero-carousel.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { Clock, CreditCard, FileCheck, MapPin, CheckCircle } from \"lucide-react\";\nimport { useState } from \"react\";\nimport QuoteModal from \"@/components/quote-modal\";\n\n// Single optimized hero image\nconst heroImage = {\n  url: \"https://images.unsplash.com/photo-1630683924997-fe27050a0416?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  alt: \"Operación industrial con maquinaria y equipos especializados\",\n};\n\nconst categories = [\n  \"Climatización\",\n  \"Telecom\", \n  \"EPP\",\n  \"Ferretería\"\n];\n\nconst trustIndicators = [\n  {\n    icon: Clock,\n    text: \"Puntualidad garantizada\"\n  },\n  {\n    icon: CreditCard,\n    text: \"Crédito a empresas\"\n  },\n  {\n    icon: FileCheck,\n    text: \"Boleta y factura\"\n  },\n  {\n    icon: MapPin,\n    text: \"Cobertura nacional\"\n  }\n];\n\nexport default function HeroCarousel() {\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\n\n  return (\n    <>\n      <section className=\"relative h-[600px] lg:h-[700px] hero-section\">\n        <div\n          className=\"absolute inset-0 bg-cover bg-center\"\n          style={{\n            backgroundImage: `linear-gradient(135deg, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.3) 100%), url('${heroImage.url}')`,\n          }}\n        >\n          <div className=\"absolute inset-0\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-full flex items-center\">\n              <div className=\"max-w-[680px] text-white\">\n                {/* Main Heading */}\n                <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-black mb-6 leading-tight\">\n                  Todo para tu Faena: Clima, Telecom, EPP y Construcción\n                </h1>\n                \n                {/* Subtitle */}\n                <p className=\"text-xl sm:text-2xl mb-8 text-white/90 font-medium\">\n                  Te cotizamos hoy. Entrega rápida. Crédito para empresas disponible.\n                </p>\n\n                {/* Category Chips */}\n                <div className=\"flex flex-wrap gap-3 mb-8\">\n                  {categories.map((category) => (\n                    <Badge \n                      key={category}\n                      variant=\"secondary\"\n                      className=\"bg-white/20 backdrop-blur-sm text-white border-white/30 px-4 py-2 text-sm font-medium hover:bg-white/30 transition-colors\"\n                    >\n                      {category}\n                    </Badge>\n                  ))}\n                </div>\n\n                {/* CTA Buttons */}\n                <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\n                  <Button\n                    onClick={() => setIsQuoteModalOpen(true)}\n                    className=\"sumerica-yellow px-8 py-4 text-lg font-bold shadow-lg hover:shadow-xl transition-all\"\n                    size=\"lg\"\n                    aria-label=\"Armar cotización de productos industriales\"\n                    data-testid=\"button-hero-quote\"\n                  >\n                    Armar Cotización\n                  </Button>\n                  \n                  <Link href=\"/catalog\">\n                    <Button\n                      variant=\"secondary\"\n                      className=\"bg-white text-black px-8 py-4 text-lg font-bold hover:bg-gray-100 shadow-lg transition-all\"\n                      size=\"lg\"\n                      aria-label=\"Ver catálogo completo de productos\"\n                      data-testid=\"button-hero-catalog\"\n                    >\n                      Ver Catálogo\n                    </Button>\n                  </Link>\n                </div>\n\n                {/* Microtext */}\n                <p className=\"text-sm text-white/80 mb-8 font-medium\">\n                  Respuesta en &lt;24 h hábil • Cobertura nacional • Boleta y factura\n                </p>\n\n                {/* Trust Indicators */}\n                <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n                  {trustIndicators.map((indicator, index) => (\n                    <div key={index} className=\"flex items-center gap-2 text-white/90\">\n                      <indicator.icon className=\"w-5 h-5 text-primary\" />\n                      <span className=\"text-sm font-medium\">{indicator.text}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <QuoteModal \n        isOpen={isQuoteModalOpen} \n        onClose={() => setIsQuoteModalOpen(false)} \n      />\n    </>\n  );\n}\n","size_bytes":4641},"client/src/components/product-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Product } from \"@shared/schema\";\nimport { useQuoteCart } from \"@/hooks/use-quote-cart\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport { Eye } from \"lucide-react\";\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nexport default function ProductCard({ product }: ProductCardProps) {\n  const { addItem } = useQuoteCart();\n  const { toast } = useToast();\n\n  const handleAddToQuote = () => {\n    addItem(product);\n    toast({\n      title: \"Producto agregado\",\n      description: `${product.name} ha sido agregado a tu cotización.`,\n    });\n  };\n\n  const formatPrice = (priceCents: number | null, currency: string = 'CLP') => {\n    if (priceCents === null || priceCents === undefined) return 'Consultar precio';\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: currency,\n    }).format(priceCents / 100);\n  };\n\n  return (\n    <Card className=\"group overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300\" data-testid={`card-product-${product.id}`}>\n      {/* Clickable Image */}\n      <Link href={`/product/${product.id}`}>\n        <div className=\"relative overflow-hidden cursor-pointer\">\n          <img \n            src={product.imageUrl || \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\"} \n            alt={product.name} \n            className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\" \n          />\n          {/* Hover overlay */}\n          <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-300 flex items-center justify-center\">\n            <div className=\"bg-white/90 rounded-full p-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n              <Eye className=\"w-5 h-5 text-gray-700\" />\n            </div>\n          </div>\n        </div>\n      </Link>\n\n      <CardContent className=\"p-4\">\n        {/* Clickable Title */}\n        <Link href={`/product/${product.id}`}>\n          <h3 className=\"font-semibold mb-2 hover:text-primary transition-colors cursor-pointer\" data-testid={`text-product-name-${product.id}`}>\n            {product.name}\n          </h3>\n        </Link>\n        \n        <div className=\"space-y-1 mb-3\">\n          <p className=\"text-sm text-muted-foreground\" data-testid={`text-product-brand-${product.id}`}>\n            Marca: {product.brand}\n          </p>\n          {product.code && (\n            <p className=\"text-xs text-muted-foreground\" data-testid={`text-product-code-${product.id}`}>\n              Código: {product.code}\n            </p>\n          )}\n          \n          {/* Price Display */}\n          <p className=\"text-lg font-bold text-gray-900\" data-testid={`text-product-price-${product.id}`}>\n            {formatPrice(product.priceCents, product.currency || 'CLP')}\n          </p>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex gap-2\">\n          <Button \n            asChild\n            variant=\"outline\" \n            className=\"flex-1\"\n          >\n            <Link \n              href={`/product/${product.id}`}\n              data-testid={`button-view-product-${product.id}`}\n            >\n              <Eye className=\"w-4 h-4 mr-2\" />\n              Ver Detalles\n            </Link>\n          </Button>\n          <Button \n            className=\"flex-1 sumerica-yellow\"\n            onClick={handleAddToQuote}\n            data-testid={`button-add-to-quote-${product.id}`}\n          >\n            Cotizar\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3734},"client/src/components/quote-modal.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useQuoteCart } from \"@/hooks/use-quote-cart\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertQuoteSchema } from \"@shared/schema\";\nimport { X } from \"lucide-react\";\n\nconst quoteFormSchema = insertQuoteSchema;\n\ninterface QuoteModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function QuoteModal({ isOpen, onClose }: QuoteModalProps) {\n  const { toast } = useToast();\n  const { items, clearCart } = useQuoteCart();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<z.infer<typeof quoteFormSchema>>({\n    resolver: zodResolver(quoteFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      company: \"\",\n      phone: \"\",\n      products: [],\n    },\n  });\n\n  const quoteMutation = useMutation({\n    mutationFn: (data: z.infer<typeof quoteFormSchema>) => {\n      const quoteData = {\n        ...data,\n        products: items.map(item => item.id)\n      };\n      return apiRequest(\"POST\", \"/api/quotes\", quoteData);\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      clearCart();\n      toast({\n        title: \"Cotización enviada\",\n        description: \"Hemos recibido tu solicitud. Te contactaremos pronto.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"No se pudo enviar la cotización. Inténtalo de nuevo.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: z.infer<typeof quoteFormSchema>) => {\n    quoteMutation.mutate(data);\n  };\n\n  const handleClose = () => {\n    setIsSubmitted(false);\n    form.reset();\n    onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\" data-testid=\"modal-quote\">\n        <DialogHeader>\n          <DialogTitle className=\"flex justify-between items-center\">\n            Solicitar Cotización\n            <Button variant=\"ghost\" size=\"sm\" onClick={handleClose} data-testid=\"button-close-quote-modal\">\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </DialogTitle>\n        </DialogHeader>\n\n        {isSubmitted ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-green-100 rounded-full flex items-center justify-center\">\n              <span className=\"text-green-600 text-2xl\">✓</span>\n            </div>\n            <h3 className=\"text-lg font-semibold mb-2\">¡Cotización enviada!</h3>\n            <p className=\"text-muted-foreground\">Te contactaremos pronto con los detalles.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* Selected Products */}\n            {items.length > 0 && (\n              <div>\n                <h3 className=\"font-semibold mb-3\">Productos seleccionados ({items.length})</h3>\n                <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                  {items.map((item) => (\n                    <Card key={item.id} className=\"p-2\">\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <p className=\"font-medium text-sm\">{item.name}</p>\n                          <p className=\"text-xs text-muted-foreground\">{item.brand}</p>\n                        </div>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Quote Form */}\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Nombre</FormLabel>\n                      <FormControl>\n                        <Input {...field} data-testid=\"input-quote-name\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"company\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Empresa</FormLabel>\n                      <FormControl>\n                        <Input {...field} value={field.value || \"\"} data-testid=\"input-quote-company\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Email</FormLabel>\n                      <FormControl>\n                        <Input type=\"email\" {...field} data-testid=\"input-quote-email\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Teléfono</FormLabel>\n                      <FormControl>\n                        <Input type=\"tel\" {...field} data-testid=\"input-quote-phone\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <Button \n                  type=\"submit\" \n                  className=\"w-full sumerica-yellow\"\n                  disabled={quoteMutation.isPending}\n                  data-testid=\"button-submit-quote\"\n                >\n                  {quoteMutation.isPending ? \"Enviando...\" : \"Enviar Solicitud de Cotización\"}\n                </Button>\n              </form>\n            </Form>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":6717},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-quote-cart.tsx":{"content":"import { createContext, useContext, useState, ReactNode } from \"react\";\nimport { Product } from \"@shared/schema\";\n\ninterface QuoteCartContextType {\n  items: Product[];\n  addItem: (product: Product) => void;\n  removeItem: (productId: string) => void;\n  clearCart: () => void;\n}\n\nconst QuoteCartContext = createContext<QuoteCartContextType | undefined>(undefined);\n\nexport function QuoteCartProvider({ children }: { children: ReactNode }) {\n  const [items, setItems] = useState<Product[]>([]);\n\n  const addItem = (product: Product) => {\n    setItems(prev => {\n      // Check if product is already in cart\n      if (prev.some(item => item.id === product.id)) {\n        return prev;\n      }\n      return [...prev, product];\n    });\n  };\n\n  const removeItem = (productId: string) => {\n    setItems(prev => prev.filter(item => item.id !== productId));\n  };\n\n  const clearCart = () => {\n    setItems([]);\n  };\n\n  return (\n    <QuoteCartContext.Provider value={{ items, addItem, removeItem, clearCart }}>\n      {children}\n    </QuoteCartContext.Provider>\n  );\n}\n\nexport function useQuoteCart() {\n  const context = useContext(QuoteCartContext);\n  if (context === undefined) {\n    throw new Error(\"useQuoteCart must be used within a QuoteCartProvider\");\n  }\n  return context;\n}\n","size_bytes":1268},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/data.ts":{"content":"// Static data for the application\n\nexport const categories = [\n  \"Climatización\",\n  \"Telecomunicaciones\", \n  \"EPP y Seguridad\",\n  \"Ferretería Industrial\",\n  \"Construcción\",\n  \"Maquinaria\",\n  \"Oficina\",\n  \"Alimentación\"\n];\n\nexport const brands = [\n  \"Carrier\",\n  \"Cisco\",\n  \"3M\",\n  \"Bosch\",\n  \"Trane\",\n  \"Motorola\",\n  \"Honeywell\",\n  \"Siemens\"\n];\n\nexport const heroImages = [\n  {\n    url: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=600\",\n    alt: \"Operación minera a gran escala con maquinaria pesada\"\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1541888946425-d81bb19240f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=600\", \n    alt: \"Sitio de construcción con grúas y materiales\"\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=600\",\n    alt: \"Torre de telecomunicaciones con equipos modernos\"\n  }\n];\n","size_bytes":955},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/catalog.tsx":{"content":"import { useState, useMemo, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Search } from \"lucide-react\";\nimport ProductCard from \"@/components/product-card\";\nimport { Product } from \"@shared/schema\";\n\nconst categories = [\n  \"Climatización\",\n  \"Telecomunicaciones\", \n  \"EPP y Seguridad\",\n  \"Ferretería Industrial\",\n  \"Construcción\"\n];\n\nconst brands = [\n  \"Carrier\",\n  \"Cisco\",\n  \"3M\",\n  \"Bosch\",\n  \"Trane\",\n  \"Motorola\"\n];\n\nexport default function Catalog() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedBrands, setSelectedBrands] = useState<string[]>([]);\n\n  const { data: products = [], isLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\"],\n  });\n\n  // Update document head for SEO\n  useEffect(() => {\n    // Base SEO for catalog page\n    document.title = \"Catálogo de Productos Industriales HVAC y Telecomunicaciones | SUMERICA\";\n    \n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      const totalProducts = products.length;\n      const description = totalProducts > 0 \n        ? `Explora nuestro catálogo de ${totalProducts} productos industriales especializados en HVAC/climatización y telecomunicaciones. Equipos para minería, construcción y energía en Chile.`\n        : \"Explora nuestro catálogo de productos industriales especializados en HVAC/climatización y telecomunicaciones. Equipos para minería, construcción y energía en Chile.\";\n      metaDescription.setAttribute('content', description);\n    }\n    \n    // Update Open Graph tags\n    const ogTitle = document.querySelector('meta[property=\"og:title\"]');\n    if (ogTitle) {\n      ogTitle.setAttribute('content', 'Catálogo de Productos Industriales HVAC y Telecomunicaciones | SUMERICA');\n    }\n    \n    const ogDescription = document.querySelector('meta[property=\"og:description\"]');\n    if (ogDescription) {\n      ogDescription.setAttribute('content', 'Catálogo completo de equipos industriales especializados en HVAC/climatización y telecomunicaciones para minería, construcción y energía.');\n    }\n    \n    // Update canonical URL\n    let canonical = document.querySelector('link[rel=\"canonical\"]');\n    if (!canonical) {\n      canonical = document.createElement('link');\n      canonical.setAttribute('rel', 'canonical');\n      document.head.appendChild(canonical);\n    }\n    canonical.setAttribute('href', 'https://sumerica.cl/catalog');\n  }, [products.length]);\n\n  // Filter products based on search and filters using useMemo\n  const filteredProducts = useMemo(() => {\n    let filtered = products;\n\n    // Search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(product =>\n        product.name.toLowerCase().includes(query) ||\n        product.brand.toLowerCase().includes(query) ||\n        product.code?.toLowerCase().includes(query) ||\n        product.description?.toLowerCase().includes(query)\n      );\n    }\n\n    // Category filter\n    if (selectedCategories.length > 0) {\n      filtered = filtered.filter(product =>\n        selectedCategories.includes(product.category)\n      );\n    }\n\n    // Brand filter\n    if (selectedBrands.length > 0) {\n      filtered = filtered.filter(product =>\n        selectedBrands.includes(product.brand)\n      );\n    }\n\n    return filtered;\n  }, [products, searchQuery, selectedCategories, selectedBrands]);\n\n  const handleCategoryChange = (category: string, checked: boolean) => {\n    if (checked) {\n      setSelectedCategories([...selectedCategories, category]);\n    } else {\n      setSelectedCategories(selectedCategories.filter(c => c !== category));\n    }\n  };\n\n  const handleBrandChange = (brand: string, checked: boolean) => {\n    if (checked) {\n      setSelectedBrands([...selectedBrands, brand]);\n    } else {\n      setSelectedBrands(selectedBrands.filter(b => b !== brand));\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">Cargando productos...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"py-16 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold mb-4\">Catálogo de Productos</h1>\n          <p className=\"text-xl text-muted-foreground\">Encuentra exactamente lo que necesitas para tu proyecto</p>\n        </div>\n        \n        {/* Search Bar */}\n        <div className=\"mb-8\">\n          <div className=\"relative max-w-2xl\">\n            <Input\n              type=\"text\"\n              placeholder=\"Encuentra tu producto por nombre, marca o código\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full px-4 py-4 pr-12 text-lg\"\n              data-testid=\"input-search-products\"\n            />\n            <Search className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n          </div>\n        </div>\n        \n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Filters Sidebar */}\n          <aside className=\"lg:w-64 flex-shrink-0\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"font-semibold mb-4\">Filtros</h3>\n                \n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium mb-3\">Categoría</h4>\n                  <div className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <div key={category} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`category-${category}`}\n                          checked={selectedCategories.includes(category)}\n                          onCheckedChange={(checked) => handleCategoryChange(category, checked as boolean)}\n                          data-testid={`checkbox-category-${category}`}\n                        />\n                        <label htmlFor={`category-${category}`} className=\"text-sm\">\n                          {category}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium mb-3\">Marca</h4>\n                  <div className=\"space-y-2\">\n                    {brands.map((brand) => (\n                      <div key={brand} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`brand-${brand}`}\n                          checked={selectedBrands.includes(brand)}\n                          onCheckedChange={(checked) => handleBrandChange(brand, checked as boolean)}\n                          data-testid={`checkbox-brand-${brand}`}\n                        />\n                        <label htmlFor={`brand-${brand}`} className=\"text-sm\">\n                          {brand}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </aside>\n          \n          {/* Products Grid */}\n          <main className=\"flex-1\">\n            {filteredProducts.length > 0 ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                {filteredProducts.map((product) => (\n                  <ProductCard key={product.id} product={product} />\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">\n                  No se encontraron productos que coincidan con tu búsqueda.\n                </p>\n              </div>\n            )}\n          </main>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8214},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { Phone, Mail, MessageSquare, MapPin } from \"lucide-react\";\n\nconst contactFormSchema = insertContactSchema;\n\nexport default function Contact() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<z.infer<typeof contactFormSchema>>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: (data: z.infer<typeof contactFormSchema>) =>\n      apiRequest(\"POST\", \"/api/contacts\", data),\n    onSuccess: () => {\n      setIsSubmitted(true);\n      form.reset();\n      toast({\n        title: \"Mensaje enviado\",\n        description: \"Gracias por contactarnos. Te responderemos pronto.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"No se pudo enviar el mensaje. Inténtalo de nuevo.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: z.infer<typeof contactFormSchema>) => {\n    contactMutation.mutate(data);\n  };\n\n  return (\n    <section className=\"py-16 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold mb-4\">Contacta con Nosotros</h1>\n          <p className=\"text-xl text-muted-foreground\">Estamos aquí para ayudarte con tu próximo proyecto</p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Form */}\n          <Card>\n            <CardContent className=\"p-8\">\n              <h2 className=\"text-2xl font-semibold mb-6\">Envíanos un Mensaje</h2>\n              \n              {isSubmitted ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-green-100 rounded-full flex items-center justify-center\">\n                    <MessageSquare className=\"text-green-600 text-2xl\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold mb-2\">¡Mensaje enviado!</h3>\n                  <p className=\"text-muted-foreground\">Te contactaremos pronto.</p>\n                </div>\n              ) : (\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Nombre Completo</FormLabel>\n                          <FormControl>\n                            <Input {...field} data-testid=\"input-contact-name\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Email</FormLabel>\n                          <FormControl>\n                            <Input type=\"email\" {...field} data-testid=\"input-contact-email\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"subject\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Asunto</FormLabel>\n                          <FormControl>\n                            <Input {...field} data-testid=\"input-contact-subject\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"message\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Mensaje</FormLabel>\n                          <FormControl>\n                            <Textarea rows={5} {...field} data-testid=\"textarea-contact-message\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <Button \n                      type=\"submit\" \n                      className=\"w-full sumerica-yellow\"\n                      disabled={contactMutation.isPending}\n                      data-testid=\"button-submit-contact\"\n                    >\n                      {contactMutation.isPending ? \"Enviando...\" : \"Enviar Mensaje\"}\n                    </Button>\n                  </form>\n                </Form>\n              )}\n            </CardContent>\n          </Card>\n          \n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <Card>\n              <CardContent className=\"p-8\">\n                <h2 className=\"text-2xl font-semibold mb-6\">Información de Contacto</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center\">\n                    <Phone className=\"w-6 text-primary mr-4\" />\n                    <div>\n                      <p className=\"font-medium\">Teléfono</p>\n                      <a href=\"tel:+56912345678\" className=\"text-primary hover:underline\">\n                        +56 9 1234 5678\n                      </a>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center\">\n                    <Mail className=\"w-6 text-primary mr-4\" />\n                    <div>\n                      <p className=\"font-medium\">Email</p>\n                      <a href=\"mailto:contacto@sumerica.cl\" className=\"text-primary hover:underline\">\n                        contacto@sumerica.cl\n                      </a>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center\">\n                    <MessageSquare className=\"w-6 text-primary mr-4\" />\n                    <div>\n                      <p className=\"font-medium\">WhatsApp</p>\n                      <a href=\"https://wa.me/56912345678\" className=\"text-primary hover:underline\">\n                        +56 9 1234 5678\n                      </a>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start\">\n                    <MapPin className=\"w-6 text-primary mr-4 mt-1\" />\n                    <div>\n                      <p className=\"font-medium\">Dirección Comercial</p>\n                      <p className=\"text-muted-foreground\">\n                        Av. Providencia 1234, Oficina 567<br />\n                        Providencia, Santiago, Chile\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            \n            {/* Google Maps Integration */}\n            <Card>\n              <div className=\"overflow-hidden rounded-lg\">\n                <div className=\"h-64 bg-gray-200 flex items-center justify-center\">\n                  <div className=\"text-center text-muted-foreground\">\n                    <MapPin className=\"text-4xl mb-2 mx-auto\" />\n                    <p>Mapa de Google Maps</p>\n                    <p className=\"text-sm\">Av. Providencia 1234, Providencia</p>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8620},"client/src/pages/home.tsx":{"content":"import HeroCarousel from \"@/components/hero-carousel\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Snowflake, Truck, CreditCard, HardHat, Building, Zap, Factory } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst categories = [\n  {\n    id: \"climatizacion\",\n    name: \"Climatización\",\n    description: \"Sistemas HVAC industriales, aire acondicionado de precisión y soluciones de climatización para faenas y plantas.\",\n    imageUrl: \"https://images.unsplash.com/photo-1621905251189-08b45d6a269e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    buttonText: \"Explorar Climatización\",\n    icon: \"❄️\",\n    priority: 1\n  },\n  {\n    id: \"telecomunicaciones\",\n    name: \"Telecomunicaciones\",\n    description: \"Redes, cableado estructurado y antenas industriales para máxima conectividad en terreno.\",\n    imageUrl: \"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    buttonText: \"Ver soluciones de Telecom\",\n    icon: \"📡\",\n    priority: 2\n  },\n  {\n    id: \"epp-seguridad\",\n    name: \"EPP y Seguridad\",\n    description: \"Protección personal certificada: cascos, guantes, calzado y equipos de seguridad industrial.\",\n    imageUrl: \"https://images.unsplash.com/photo-1556740758-90de374c12ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    buttonText: \"Cotizar EPP ahora\",\n    icon: \"🦺\",\n    priority: 3\n  },\n  {\n    id: \"ferreteria\",\n    name: \"Ferretería Industrial\",\n    description: \"Todo en herramientas, tornillería y accesorios para proyectos de construcción y minería.\",\n    imageUrl: \"https://images.unsplash.com/photo-1504148455328-c376907d081c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    buttonText: \"Explorar Ferretería\",\n    icon: \"🛠️\",\n    priority: 4\n  },\n  {\n    id: \"construccion\",\n    name: \"Construcción\",\n    description: \"Materiales, maquinaria y equipos especializados para obras de gran escala.\",\n    imageUrl: \"https://images.unsplash.com/photo-1541888946425-d81bb19240f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    buttonText: \"Ver productos de Construcción\",\n    icon: \"🏗️\",\n    priority: 5\n  }\n];\n\nconst industries = [\n  { \n    name: \"Minería\", \n    icon: HardHat,\n    description: \"Insumos y equipos especializados para faenas en terreno.\"\n  },\n  { \n    name: \"Construcción\", \n    icon: Building,\n    description: \"Materiales y herramientas para obras a gran escala.\"\n  },\n  { \n    name: \"Energía\", \n    icon: Zap,\n    description: \"Soluciones eléctricas y climatización para plantas energéticas.\"\n  },\n  { \n    name: \"Industrial\", \n    icon: Factory,\n    description: \"Ferretería, seguridad y telecomunicaciones para la industria general.\"\n  }\n];\n\nexport default function Home() {\n  return (\n    <div>\n      {/* Hero Section */}\n      <HeroCarousel />\n\n      {/* Benefits Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {/* Benefit 1: Especialistas en Clima y Telecom */}\n            <div\n              className=\"group relative bg-white border border-gray-200 rounded-2xl p-8 transition-all duration-300 hover:shadow-lg hover:border-gray-300 cursor-pointer focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2\"\n              data-analytics=\"benefit-clima\"\n              data-testid=\"card-benefit-clima\"\n              onClick={(e) => {\n                if (!(e.target as Element)?.closest('a')) {\n                  window.location.href = '/services#climatizacion-telecom';\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={(e) => {\n                if ((e.key === 'Enter' || e.key === ' ') && !(e.target as Element)?.closest('a')) {\n                  e.preventDefault();\n                  window.location.href = '/services#climatizacion-telecom';\n                }\n              }}\n            >\n              <div className=\"flex items-center justify-center w-8 h-8 mb-6\">\n                <Snowflake className=\"w-8 h-8 text-primary\" strokeWidth={1.5} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4 text-gray-900\">\n                Especialistas en Clima y Telecom\n              </h3>\n              <p className=\"text-base mb-6\" style={{ color: '#5B5F66' }}>\n                Asesoría técnica y precios competitivos para proyectos exigentes. Split/VRF, ductos, cableado y conectividad. Importación a pedido.\n              </p>\n              <a\n                href=\"/services#climatizacion-telecom\"\n                className=\"inline-flex items-center text-primary font-medium hover:underline focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:rounded\"\n                aria-label=\"Ver soluciones de Clima y Telecom\"\n                data-testid=\"link-clima-solutions\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                Ver soluciones de Clima y Telecom →\n              </a>\n            </div>\n\n            {/* Benefit 2: Logística Rápida y Confiable */}\n            <div\n              className=\"group relative bg-white border border-gray-200 rounded-2xl p-8 transition-all duration-300 hover:shadow-lg hover:border-gray-300 cursor-pointer focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2\"\n              data-analytics=\"benefit-logistica\"\n              data-testid=\"card-benefit-logistica\"\n              onClick={(e) => {\n                if (!(e.target as Element)?.closest('a')) {\n                  window.location.href = '/contact#logistica';\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={(e) => {\n                if ((e.key === 'Enter' || e.key === ' ') && !(e.target as Element)?.closest('a')) {\n                  e.preventDefault();\n                  window.location.href = '/contact#logistica';\n                }\n              }}\n            >\n              <div className=\"flex items-center justify-center w-8 h-8 mb-6\">\n                <Truck className=\"w-8 h-8 text-primary\" strokeWidth={1.5} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4 text-gray-900\">\n                Logística Rápida y Confiable\n              </h3>\n              <p className=\"text-base mb-6\" style={{ color: '#5B5F66' }}>\n                Despacho prioritario 24–72 h a obra o faena*. Seguimiento y coordinación directa con tu equipo.\n              </p>\n              <a\n                href=\"/contact#logistica\"\n                className=\"inline-flex items-center text-primary font-medium hover:underline focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:rounded\"\n                aria-label=\"Tiempos y cobertura\"\n                data-testid=\"link-logistics-info\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                Tiempos y cobertura →\n              </a>\n            </div>\n\n            {/* Benefit 3: Crédito para tu Empresa */}\n            <div\n              className=\"group relative bg-white border border-gray-200 rounded-2xl p-8 transition-all duration-300 hover:shadow-lg hover:border-gray-300 cursor-pointer focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2\"\n              data-analytics=\"benefit-credito\"\n              data-testid=\"card-benefit-credito\"\n              onClick={(e) => {\n                if (!(e.target as Element)?.closest('a')) {\n                  window.location.href = '/contact#credito';\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={(e) => {\n                if ((e.key === 'Enter' || e.key === ' ') && !(e.target as Element)?.closest('a')) {\n                  e.preventDefault();\n                  window.location.href = '/contact#credito';\n                }\n              }}\n            >\n              <div className=\"flex items-center justify-center w-8 h-8 mb-6\">\n                <CreditCard className=\"w-8 h-8 text-primary\" strokeWidth={1.5} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4 text-gray-900\">\n                Crédito para tu Empresa\n              </h3>\n              <p className=\"text-base mb-6\" style={{ color: '#5B5F66' }}>\n                Flexibilidad financiera para tus compras recurrentes. Boleta o factura y opciones de crédito (sujeto a evaluación).\n              </p>\n              <a\n                href=\"/contact#credito\"\n                className=\"inline-flex items-center text-primary font-medium hover:underline focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:rounded\"\n                aria-label=\"Solicitar evaluación de crédito\"\n                data-testid=\"link-credit-evaluation\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                Solicitar evaluación de crédito →\n              </a>\n            </div>\n          </div>\n          \n          {/* Footnote */}\n          <div className=\"mt-8 text-center\">\n            <p className=\"text-sm text-gray-500\">\n              *Plazos referenciales; sujetos a stock y región.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Specialties Section - Asymmetric Mosaic Design */}\n      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6 text-gray-900\">Nuestras Especialidades</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\" style={{ fontSize: '20px' }}>\n              Climatización y Telecomunicaciones: nuestros principales diferenciadores para proyectos industriales exigentes\n            </p>\n          </div>\n          \n          {/* Asymmetric Mosaic Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            \n            {/* Primary Specialties - Large Cards */}\n            {/* Climatización - Large Featured Card */}\n            <div \n              className=\"group lg:col-span-2 lg:row-span-2 relative bg-white overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-1\"\n              style={{\n                borderRadius: '24px 24px 0 0',\n                minHeight: '400px'\n              }}\n              data-testid=\"card-featured-climatizacion\"\n            >\n              <div className=\"absolute inset-0\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1621905251189-08b45d6a269e?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=800\" \n                  alt=\"Climatización Industrial\" \n                  className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\" \n                  loading=\"eager\"\n                />\n                \n                {/* Dark Overlay for Legibility */}\n                <div \n                  className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80 group-hover:from-black/60 group-hover:via-black/70 group-hover:to-black/90 transition-all duration-500\"\n                />\n              </div>\n              \n              <div className=\"relative z-10 p-8 h-full flex flex-col justify-between\">\n                {/* Title */}\n                <div>\n                  <h3 className=\"text-3xl lg:text-4xl font-bold mb-4 text-white leading-tight\">\n                    Climatización Industrial\n                  </h3>\n                  <p className=\"text-white/90 mb-8 leading-relaxed text-lg\" style={{ fontSize: '18px' }}>\n                    Sistemas HVAC industriales, aire acondicionado de precisión y soluciones de climatización para faenas mineras y plantas energéticas. Control total del ambiente para operaciones críticas.\n                  </p>\n                </div>\n                \n                {/* CTA Button */}\n                <Button \n                  variant=\"outline\"\n                  className=\"w-fit bg-transparent border-2 border-white text-white hover:bg-primary hover:border-primary hover:text-black font-semibold py-3 px-8 transition-all duration-300 hover:shadow-lg backdrop-blur-sm\"\n                  aria-label=\"Explorar soluciones de Climatización Industrial\"\n                  data-testid=\"button-climatizacion-explore\"\n                >\n                  Explorar Climatización\n                </Button>\n              </div>\n            </div>\n\n            {/* Telecomunicaciones - Large Featured Card */}\n            <div \n              className=\"group relative bg-white overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-1\"\n              style={{\n                borderRadius: '24px 24px 0 0',\n                minHeight: '400px'\n              }}\n              data-testid=\"card-featured-telecomunicaciones\"\n            >\n              <div className=\"absolute inset-0\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800\" \n                  alt=\"Telecomunicaciones Industriales\" \n                  className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\" \n                  loading=\"eager\"\n                />\n                \n                {/* Dark Overlay for Legibility */}\n                <div \n                  className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80 group-hover:from-black/60 group-hover:via-black/70 group-hover:to-black/90 transition-all duration-500\"\n                />\n              </div>\n              \n              <div className=\"relative z-10 p-6 h-full flex flex-col justify-between\">\n                {/* Title */}\n                <div>\n                  <h3 className=\"text-3xl font-bold mb-4 text-white leading-tight\">\n                    Telecomunicaciones\n                  </h3>\n                  <p className=\"text-white/90 mb-8 leading-relaxed text-base\" style={{ fontSize: '16px' }}>\n                    Redes, cableado estructurado y antenas industriales para máxima conectividad en terreno. Comunicación robusta para operaciones remotas.\n                  </p>\n                </div>\n                \n                {/* CTA Button */}\n                <Button \n                  variant=\"outline\"\n                  className=\"w-fit bg-transparent border-2 border-white text-white hover:bg-primary hover:border-primary hover:text-black font-semibold py-3 px-6 transition-all duration-300 hover:shadow-lg backdrop-blur-sm\"\n                  aria-label=\"Ver soluciones de Telecomunicaciones Industriales\"\n                  data-testid=\"button-telecomunicaciones-explore\"\n                >\n                  Ver soluciones de Telecom\n                </Button>\n              </div>\n            </div>\n\n            {/* Secondary Specialties - Compact Cards */}\n            {/* EPP y Seguridad */}\n            <div \n              className=\"group bg-white overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative\"\n              style={{\n                borderRadius: '24px 24px 0 0',\n                minHeight: '180px'\n              }}\n              data-testid=\"card-compact-epp\"\n            >\n              <div className=\"absolute inset-0\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1556740758-90de374c12ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\" \n                  alt=\"EPP y Seguridad\" \n                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\" \n                  loading=\"lazy\"\n                />\n                <div \n                  className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80 group-hover:from-black/60 group-hover:via-black/70 group-hover:to-black/90 transition-all duration-500\"\n                />\n              </div>\n              \n              <div className=\"relative z-10 p-6 h-full flex flex-col justify-between\">\n                <div>\n                  <h3 className=\"text-xl font-bold mb-4 text-white\">\n                    EPP y Seguridad\n                  </h3>\n                </div>\n                \n                <Button \n                  variant=\"outline\"\n                  className=\"w-fit bg-transparent border-2 border-white text-white hover:bg-primary hover:border-primary hover:text-black font-semibold py-2 px-6 transition-all duration-300 hover:shadow-lg backdrop-blur-sm\"\n                  aria-label=\"Cotizar EPP y equipos de seguridad industrial\"\n                  data-testid=\"button-epp-quote\"\n                >\n                  Cotizar EPP ahora\n                </Button>\n              </div>\n            </div>\n\n            {/* Ferretería Industrial */}\n            <div \n              className=\"group bg-white overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative\"\n              style={{\n                borderRadius: '24px 24px 0 0',\n                minHeight: '180px'\n              }}\n              data-testid=\"card-compact-ferreteria\"\n            >\n              <div className=\"absolute inset-0\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1504148455328-c376907d081c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\" \n                  alt=\"Ferretería Industrial\" \n                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\" \n                  loading=\"lazy\"\n                />\n                <div \n                  className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80 group-hover:from-black/60 group-hover:via-black/70 group-hover:to-black/90 transition-all duration-500\"\n                />\n              </div>\n              \n              <div className=\"relative z-10 p-6 h-full flex flex-col justify-between\">\n                <div>\n                  <h3 className=\"text-xl font-bold mb-4 text-white\">\n                    Ferretería Industrial\n                  </h3>\n                </div>\n                \n                <Button \n                  variant=\"outline\"\n                  className=\"w-fit bg-transparent border-2 border-white text-white hover:bg-primary hover:border-primary hover:text-black font-semibold py-2 px-6 transition-all duration-300 hover:shadow-lg backdrop-blur-sm\"\n                  aria-label=\"Explorar herramientas y ferretería industrial\"\n                  data-testid=\"button-ferreteria-explore\"\n                >\n                  Explorar Ferretería\n                </Button>\n              </div>\n            </div>\n\n            {/* Construcción */}\n            <div \n              className=\"group bg-white overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative\"\n              style={{\n                borderRadius: '24px 24px 0 0',\n                minHeight: '180px'\n              }}\n              data-testid=\"card-compact-construccion\"\n            >\n              <div className=\"absolute inset-0\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1541888946425-d81bb19240f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\" \n                  alt=\"Construcción\" \n                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\" \n                  loading=\"lazy\"\n                />\n                <div \n                  className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/80 group-hover:from-black/60 group-hover:via-black/70 group-hover:to-black/90 transition-all duration-500\"\n                />\n              </div>\n              \n              <div className=\"relative z-10 p-6 h-full flex flex-col justify-between\">\n                <div>\n                  <h3 className=\"text-xl font-bold mb-4 text-white\">\n                    Construcción\n                  </h3>\n                </div>\n                \n                <Button \n                  variant=\"outline\"\n                  className=\"w-fit bg-transparent border-2 border-white text-white hover:bg-primary hover:border-primary hover:text-black font-semibold py-2 px-6 transition-all duration-300 hover:shadow-lg backdrop-blur-sm\"\n                  aria-label=\"Ver productos y materiales de construcción\"\n                  data-testid=\"button-construccion-explore\"\n                >\n                  Ver productos de Construcción\n                </Button>\n              </div>\n            </div>\n\n          </div>\n          \n          <div className=\"text-center mt-16\">\n            <Link href=\"/catalog\">\n              <Button \n                className=\"sumerica-yellow px-10 py-4 text-lg font-bold shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-1\" \n                data-testid=\"button-view-all-categories\"\n                aria-label=\"Ver todas las categorías de productos\"\n              >\n                Explorar Todo Nuestro Catálogo\n              </Button>\n            </Link>\n          </div>\n          \n          {/* Sticky CTA for Mobile */}\n          <div className=\"fixed bottom-0 left-0 right-0 p-4 bg-white border-t border-gray-200 shadow-lg z-40 md:hidden\">\n            <Link href=\"/catalog\">\n              <Button \n                className=\"sumerica-yellow w-full py-3 text-lg font-bold\" \n                data-testid=\"button-view-all-categories-mobile\"\n                aria-label=\"Ver todas las categorías de productos\"\n              >\n                Explorar Catálogo\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Trust and Social Proof Section */}\n      <section className=\"py-16 bg-muted pb-20 md:pb-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4 text-gray-900\">\n              Soluciones Industriales Certificadas para Minería, Energía y Construcción en Chile\n            </h2>\n            <p className=\"text-xl text-gray-600\" style={{ fontSize: '18px' }}>\n              Más de 100 proyectos entregados con puntualidad y respaldo técnico. Empresas líderes confían en nosotros.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {industries.map((industry) => (\n              <div key={industry.name} className=\"text-center\">\n                <div className=\"w-20 h-20 mx-auto mb-4 bg-white rounded-full flex items-center justify-center shadow-lg border border-gray-100\">\n                  <industry.icon className=\"w-10 h-10 text-primary\" strokeWidth={1.5} />\n                </div>\n                <h4 className=\"font-bold text-lg mb-2 text-gray-900\">{industry.name}</h4>\n                <p className=\"text-gray-600 text-sm leading-relaxed\" style={{ fontSize: '16px' }}>\n                  {industry.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Final CTA Section */}\n      <section className=\"py-16 sumerica-yellow\">\n        <div className=\"max-w-4xl mx-auto text-center px-4\">\n          <h2 className=\"text-4xl font-bold mb-4 text-primary-foreground\">\n            ¿Tienes un Requerimiento Complejo o Urgente?\n          </h2>\n          <p className=\"text-xl mb-8 text-primary-foreground/90\" style={{ fontSize: '20px' }}>\n            Nuestro equipo responde en menos de 24 h hábiles y diseña la mejor solución para tu empresa.\n          </p>\n          <Link href=\"/contact\">\n            <Button \n              className=\"bg-white text-black px-10 py-4 text-lg font-bold hover:bg-gray-100 hover:shadow-xl transition-all duration-300 shadow-lg\"\n              data-testid=\"button-request-quote\"\n              aria-label=\"Solicitar cotización personalizada para tu empresa\"\n            >\n              <span className=\"mr-2\">💬</span>\n              Solicitar Cotización Personalizada\n            </Button>\n          </Link>\n        </div>\n      </section>\n\n      {/* Partners and Certifications Section */}\n      <section className=\"py-12 bg-gray-50 border-t border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8\">\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Empresas que confían en SUMERICA\n            </h3>\n            <p className=\"text-gray-600\" style={{ fontSize: '16px' }}>\n              Respaldados por certificaciones y alianzas estratégicas\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-8 items-center opacity-60\">\n            {/* Placeholder logos - these would be replaced with actual partner/certification logos */}\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">ISO 9001</span>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">CODELCO</span>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">ENGIE</span>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">ENEL</span>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">SACYR</span>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-16\">\n              <span className=\"text-gray-400 font-medium text-sm\">COPEC</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":26464},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/layout/floating-whatsapp.tsx":{"content":"import { MessageCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function FloatingWhatsApp() {\n  const whatsappUrl = \"https://wa.me/56912345678\";\n\n  return (\n    <a\n      href={whatsappUrl}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"fixed bottom-6 right-6 z-50\"\n      data-testid=\"button-whatsapp-float\"\n    >\n      <Button\n        size=\"lg\"\n        className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg\"\n      >\n        <MessageCircle className=\"h-6 w-6\" />\n      </Button>\n    </a>\n  );\n}\n","size_bytes":592},"client/src/components/layout/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Facebook, Instagram, Linkedin } from \"lucide-react\";\n\nconst navigation = [\n  { name: \"Inicio\", href: \"/\" },\n  { name: \"Catálogo\", href: \"/catalog\" },\n  { name: \"Servicios\", href: \"#servicios\" },\n  { name: \"Industrias\", href: \"#industrias\" },\n  { name: \"Contacto\", href: \"/contact\" },\n];\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-card border-t border-border py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div className=\"md:col-span-2\">\n            <div className=\"text-2xl font-bold text-foreground mb-4\">\n              <span className=\"text-primary\">SUMERICA</span>\n            </div>\n            <p className=\"text-muted-foreground mb-4\" style={{ fontSize: '16px' }}>\n              SUMERICA es proveedor de confianza en climatización, telecomunicaciones y suministros industriales en Chile. Con más de 10 años de experiencia y alianzas estratégicas, entregamos soluciones rápidas, flexibles y certificadas para empresas líderes.\n            </p>\n            <div className=\"mb-4\">\n              <p className=\"text-sm font-medium text-muted-foreground\">\n                <span className=\"text-primary font-semibold\">Horarios de atención:</span> Lunes a Viernes · 9:00–18:00 hrs\n              </p>\n            </div>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"#\" \n                className=\"text-primary hover:text-yellow-600 transition-colors duration-300\" \n                data-testid=\"link-linkedin\"\n                aria-label=\"Visitar perfil de LinkedIn de SUMERICA\"\n              >\n                <Linkedin className=\"w-6 h-6\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-primary hover:text-yellow-600 transition-colors duration-300\" \n                data-testid=\"link-facebook\"\n                aria-label=\"Visitar página de Facebook de SUMERICA\"\n              >\n                <Facebook className=\"w-6 h-6\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"text-primary hover:text-yellow-600 transition-colors duration-300\" \n                data-testid=\"link-instagram\"\n                aria-label=\"Visitar perfil de Instagram de SUMERICA\"\n              >\n                <Instagram className=\"w-6 h-6\" />\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"font-semibold mb-4\">Explora</h3>\n            <div className=\"space-y-2\">\n              {navigation.map((item) => (\n                <Link key={item.name} href={item.href}>\n                  <span className=\"block text-muted-foreground hover:text-primary cursor-pointer\" data-testid={`link-footer-${item.name.toLowerCase()}`}>\n                    {item.name}\n                  </span>\n                </Link>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"font-semibold mb-4\">Contacto</h3>\n            <div className=\"space-y-2 text-muted-foreground\">\n              <p>+56 9 1234 5678</p>\n              <p>contacto@sumerica.cl</p>\n              <p>Av. Providencia 1234<br />Providencia, Santiago</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-border mt-8 pt-8 text-center text-muted-foreground\">\n          <p>&copy; 2024 SUMERICA. Todos los derechos reservados.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3571},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, ShoppingCart } from \"lucide-react\";\nimport { useQuoteCart } from \"@/hooks/use-quote-cart\";\nimport QuoteModal from \"@/components/quote-modal\";\nimport sumericaLogo from \"@/assets/logosumerica.png\"; // <-- 1. IMPORTA LA IMAGEN\n\nconst navigation = [\n  { name: \"Inicio\", href: \"/\" },\n  { name: \"Catálogo\", href: \"/catalog\" },\n  { name: \"Servicios\", href: \"/servicios\" },\n  { name: \"Industrias\", href: \"/industrias\" },\n  { name: \"Contacto\", href: \"/contact\" },\n];\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);\n  const { items } = useQuoteCart();\n\n  return (\n    <>\n      <header className=\"bg-white shadow-sm border-b border-border sticky top-0 z-30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo */}\n            <Link href=\"/\">\n              <img\n                src={sumericaLogo} // <-- 2. USA LA VARIABLE IMPORTADA\n                alt=\"Sumerica Logo\"\n                className=\"h-20 w-auto cursor-pointer\"\n                data-testid=\"link-logo\"\n              />\n            </Link>\n            {/* Desktop Navigation */}\n            <nav className=\"hidden md:flex space-x-8\">\n              {navigation.map((item) => (\n                <Link key={item.name} href={item.href}>\n                  <span\n                    className={`font-medium transition-colors hover:text-primary cursor-pointer ${\n                      location === item.href\n                        ? \"text-primary\"\n                        : \"text-foreground\"\n                    }`}\n                    data-testid={`link-nav-${item.name.toLowerCase()}`}\n                  >\n                    {item.name}\n                  </span>\n                </Link>\n              ))}\n            </nav>\n\n            {/* CTA Button & Quote Counter */}\n            <div className=\"flex items-center space-x-4\">\n              {items.length > 0 && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setIsQuoteModalOpen(true)}\n                  className=\"relative\"\n                  data-testid=\"button-quote-counter\"\n                >\n                  <ShoppingCart className=\"h-4 w-4 mr-1\" />\n                  {items.length} productos\n                </Button>\n              )}\n\n              <Button\n                className=\"sumerica-yellow\"\n                onClick={() => setIsQuoteModalOpen(true)}\n                data-testid=\"button-quote-now\"\n              >\n                Cotizar Ahora\n              </Button>\n\n              {/* Mobile menu button */}\n              <Sheet>\n                <SheetTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"md:hidden\"\n                    data-testid=\"button-mobile-menu\"\n                  >\n                    <Menu className=\"h-5 w-5\" />\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"right\" className=\"w-[300px]\">\n                  <nav className=\"flex flex-col space-y-4 mt-8\">\n                    {navigation.map((item) => (\n                      <Link key={item.name} href={item.href}>\n                        <span\n                          className={`block font-medium transition-colors hover:text-primary cursor-pointer ${\n                            location === item.href\n                              ? \"text-primary\"\n                              : \"text-foreground\"\n                          }`}\n                          data-testid={`link-mobile-nav-${item.name.toLowerCase()}`}\n                        >\n                          {item.name}\n                        </span>\n                      </Link>\n                    ))}\n                  </nav>\n                </SheetContent>\n              </Sheet>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <QuoteModal\n        isOpen={isQuoteModalOpen}\n        onClose={() => setIsQuoteModalOpen(false)}\n      />\n    </>\n  );\n}\n","size_bytes":4358},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/industries.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  HardHat, \n  Building, \n  Zap, \n  Factory, \n  Fuel,\n  Waves,\n  CheckCircle,\n  Phone,\n  Users,\n  TrendingUp,\n  Award\n} from \"lucide-react\";\n\nconst industries = [\n  {\n    id: \"mineria\",\n    name: \"Minería\",\n    description: \"Soluciones especializadas para faenas mineras: climatización para túneles, telecomunicaciones en terreno y EPP certificado para condiciones extremas.\",\n    icon: HardHat,\n    challenges: [\n      \"Ambientes extremos y polvorientos\",\n      \"Comunicación en túneles profundos\", \n      \"Equipos resistentes a vibraciones\",\n      \"Cumplimiento normativo estricto\"\n    ],\n    solutions: [\n      \"Sistemas HVAC anti-explosión\",\n      \"Redes de telecomunicaciones robustas\",\n      \"EPP certificado para minería\",\n      \"Mantención en terreno\"\n    ],\n    stats: {\n      projects: \"50+\",\n      experience: \"8 años\",\n      companies: \"15+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"CODELCO\", \"Anglo American\", \"Antofagasta Minerals\"]\n  },\n  {\n    id: \"construccion\",\n    name: \"Construcción\",\n    description: \"Equipamiento y herramientas para obras de gran escala: desde ferretería especializada hasta sistemas de climatización para edificios corporativos.\",\n    icon: Building,\n    challenges: [\n      \"Plazos de entrega ajustados\",\n      \"Coordinación en obra\",\n      \"Equipos de alta durabilidad\",\n      \"Logística en altura\"\n    ],\n    solutions: [\n      \"Ferretería industrial completa\",\n      \"Sistemas HVAC para edificios\",\n      \"Herramientas profesionales\",\n      \"Logística especializada\"\n    ],\n    stats: {\n      projects: \"75+\",\n      experience: \"10 años\",\n      companies: \"25+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1541888946425-d81bb19240f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"SACYR\", \"BESALCO\", \"Grupo Pais\"]\n  },\n  {\n    id: \"energia\",\n    name: \"Energía\",\n    description: \"Tecnología avanzada para plantas energéticas: climatización de precisión, telecomunicaciones críticas y mantención especializada.\",\n    icon: Zap,\n    challenges: [\n      \"Operación continua 24/7\",\n      \"Precisión en climatización\",\n      \"Comunicaciones críticas\",\n      \"Seguridad extrema\"\n    ],\n    solutions: [\n      \"Climatización de precisión\",\n      \"Sistemas de comunicación redundantes\",\n      \"Equipos anti-explosión\",\n      \"Mantención predictiva\"\n    ],\n    stats: {\n      projects: \"30+\",\n      experience: \"6 años\", \n      companies: \"10+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1473341304170-971dccb5ac1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"ENEL\", \"ENGIE\", \"AES Andes\"]\n  },\n  {\n    id: \"petroleo-gas\",\n    name: \"Petróleo y Gas\",\n    description: \"Soluciones técnicas para refinería y distribución: equipos certificados anti-explosión y sistemas de comunicación en zonas peligrosas.\",\n    icon: Fuel,\n    challenges: [\n      \"Ambientes explosivos\",\n      \"Certificaciones ATEX\",\n      \"Operaciones críticas\",\n      \"Mantenimiento complejo\"\n    ],\n    solutions: [\n      \"Equipos certificados ATEX\",\n      \"Comunicaciones intrínsecamente seguras\",\n      \"Mantención especializada\",\n      \"EPP para zonas peligrosas\"\n    ],\n    stats: {\n      projects: \"20+\",\n      experience: \"5 años\",\n      companies: \"8+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"COPEC\", \"Shell\", \"Petrobras\"]\n  },\n  {\n    id: \"agua-saneamiento\",\n    name: \"Agua y Saneamiento\",\n    description: \"Tecnología para plantas de tratamiento: sistemas de automatización, control ambiental y equipos resistentes a la corrosión.\",\n    icon: Waves,\n    challenges: [\n      \"Ambientes corrosivos\",\n      \"Automatización compleja\",\n      \"Monitoreo continuo\",\n      \"Cumplimiento ambiental\"\n    ],\n    solutions: [\n      \"Equipos resistentes a corrosión\",\n      \"Sistemas de automatización\",\n      \"Monitoreo ambiental\",\n      \"Telecomunicaciones robustas\"\n    ],\n    stats: {\n      projects: \"25+\",\n      experience: \"4 años\",\n      companies: \"12+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1581093458791-9d42e27e6c5d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"Aguas Andinas\", \"ESVAL\", \"Nuevosur\"]\n  },\n  {\n    id: \"industrial-general\",\n    name: \"Industrial General\",\n    description: \"Soluciones versátiles para manufactura y procesos: desde climatización estándar hasta telecomunicaciones industriales básicas.\",\n    icon: Factory,\n    challenges: [\n      \"Diversidad de procesos\",\n      \"Optimización de costos\",\n      \"Flexibilidad operacional\",\n      \"Mantenimiento eficiente\"\n    ],\n    solutions: [\n      \"Climatización industrial estándar\",\n      \"Telecomunicaciones básicas\",\n      \"Ferretería general\",\n      \"Soporte técnico integral\"\n    ],\n    stats: {\n      projects: \"100+\",\n      experience: \"10 años\",\n      companies: \"40+\"\n    },\n    imageUrl: \"https://images.unsplash.com/photo-1565789444216-1e1d75a0bc7a?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    clientLogos: [\"CCU\", \"Nestlé\", \"Carozzi\"]\n  }\n];\n\nconst industryFeatures = [\n  {\n    icon: Award,\n    title: \"Especialización Técnica\",\n    description: \"Equipos con experiencia específica en cada sector industrial\"\n  },\n  {\n    icon: Users,\n    title: \"Equipos Dedicados\",\n    description: \"Profesionales especializados por industria y aplicación\"\n  },\n  {\n    icon: TrendingUp,\n    title: \"Mejora Continua\",\n    description: \"Optimización constante basada en experiencia de campo\"\n  }\n];\n\nexport default function Industries() {\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 py-20\">\n        <div className=\"absolute inset-0 bg-black opacity-50\" />\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-white mb-6\">\n            Sectores <span className=\"text-primary\">Industriales</span>\n          </h1>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto mb-8\" style={{ fontSize: '20px' }}>\n            Experiencia especializada en los principales sectores de la economía chilena. \n            Soluciones técnicas diseñadas para cada industria específica.\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-4 mb-8\">\n            <Badge variant=\"secondary\" className=\"bg-primary/20 text-primary text-sm px-4 py-2\">\n              200+ Proyectos Completados\n            </Badge>\n            <Badge variant=\"secondary\" className=\"bg-primary/20 text-primary text-sm px-4 py-2\">\n              6 Sectores Especializados\n            </Badge>\n            <Badge variant=\"secondary\" className=\"bg-primary/20 text-primary text-sm px-4 py-2\">\n              110+ Empresas Atendidas\n            </Badge>\n          </div>\n        </div>\n      </section>\n\n      {/* Industry Features */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {industryFeatures.map((feature, index) => (\n              <div\n                key={index}\n                className=\"text-center bg-white p-8 rounded-xl shadow-sm hover:shadow-md transition-shadow\"\n                data-testid={`feature-${index}`}\n              >\n                <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <feature.icon className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-4 text-gray-900\">{feature.title}</h3>\n                <p className=\"text-gray-600\" style={{ fontSize: '16px' }}>{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Industries Grid */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-gray-900\">\n              Sectores que Atendemos\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Especialización profunda en cada industria para entregar soluciones técnicas precisas\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {industries.map((industry, index) => (\n              <div\n                key={industry.id}\n                className=\"group bg-white border border-gray-200 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden hover:-translate-y-1\"\n                data-testid={`card-industry-${industry.id}`}\n              >\n                <div className=\"relative h-64 overflow-hidden\">\n                  <img\n                    src={industry.imageUrl}\n                    alt={industry.name}\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                    loading={index < 2 ? \"eager\" : \"lazy\"}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\" />\n                  <div className=\"absolute top-4 left-4\">\n                    <div className=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center shadow-lg\">\n                      <industry.icon className=\"w-6 h-6 text-black\" />\n                    </div>\n                  </div>\n                  <div className=\"absolute bottom-4 left-4 right-4\">\n                    <h3 className=\"text-2xl font-bold text-white mb-2\">{industry.name}</h3>\n                    <div className=\"flex gap-2 flex-wrap\">\n                      {Object.entries(industry.stats).map(([key, value]) => (\n                        <Badge key={key} variant=\"secondary\" className=\"bg-white/20 text-white text-xs\">\n                          {value} {key === 'projects' ? 'proyectos' : key === 'experience' ? 'experiencia' : 'empresas'}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"p-8\">\n                  <p className=\"text-gray-600 mb-6 leading-relaxed\" style={{ fontSize: '16px' }}>\n                    {industry.description}\n                  </p>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900 mb-3\">Desafíos Técnicos:</h4>\n                      <ul className=\"space-y-2\">\n                        {industry.challenges.map((challenge, idx) => (\n                          <li key={idx} className=\"flex items-start\">\n                            <div className=\"w-2 h-2 bg-red-400 rounded-full mr-2 mt-2 flex-shrink-0\" />\n                            <span className=\"text-gray-600 text-sm\">{challenge}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900 mb-3\">Nuestras Soluciones:</h4>\n                      <ul className=\"space-y-2\">\n                        {industry.solutions.map((solution, idx) => (\n                          <li key={idx} className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-primary mr-2 mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-gray-600 text-sm\">{solution}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n                    <h4 className=\"font-semibold text-gray-900 mb-2\">Empresas que confían en nosotros:</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {industry.clientLogos.map((client, idx) => (\n                        <Badge key={idx} variant=\"outline\" className=\"text-xs\">\n                          {client}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full border-2 border-primary text-primary hover:bg-primary hover:text-black font-semibold py-3 transition-all duration-300\"\n                      aria-label={`Consultar por soluciones para ${industry.name}`}\n                      data-testid={`button-consult-${industry.id}`}\n                    >\n                      Consultar por {industry.name}\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 sumerica-yellow\">\n        <div className=\"max-w-4xl mx-auto text-center px-4\">\n          <h2 className=\"text-4xl font-bold mb-4 text-primary-foreground\">\n            ¿Tu Industria Requiere una Solución Específica?\n          </h2>\n          <p className=\"text-xl mb-8 text-primary-foreground/90\" style={{ fontSize: '20px' }}>\n            Cuéntanos sobre tu sector y diseñaremos la solución técnica perfecta\n          </p>\n          <Link href=\"/contact\">\n            <Button className=\"bg-white text-black px-10 py-4 text-lg font-bold hover:bg-gray-100 hover:shadow-xl transition-all duration-300\">\n              <Phone className=\"mr-2 h-5 w-5\" />\n              Conversar con Especialista\n            </Button>\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":14131},"client/src/pages/services.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Snowflake, \n  Radio, \n  Shield, \n  Wrench, \n  Building, \n  Clock, \n  CheckCircle, \n  Phone,\n  Settings,\n  Headphones\n} from \"lucide-react\";\n\nconst services = [\n  {\n    id: \"climatizacion\",\n    title: \"Climatización Industrial\",\n    description: \"Diseño, instalación y mantención de sistemas HVAC para faenas mineras, plantas energéticas y complejos industriales.\",\n    icon: Snowflake,\n    features: [\n      \"Aire acondicionado de precisión\",\n      \"Sistemas de ventilación industrial\",\n      \"Climatización para salas técnicas\",\n      \"Mantención preventiva y correctiva\"\n    ],\n    benefits: \"Controla temperatura y humedad en ambientes críticos, mejorando productividad y protegiendo equipos sensibles.\",\n    imageUrl: \"https://images.unsplash.com/photo-1621905251189-08b45d6a269e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    deliveryTime: \"15-30 días\",\n    coverage: \"Nacional\"\n  },\n  {\n    id: \"telecomunicaciones\",\n    title: \"Telecomunicaciones Industriales\",\n    description: \"Conectividad robusta para operaciones críticas: redes, radiocomunicación y sistemas de datos en terreno.\",\n    icon: Radio,\n    features: [\n      \"Cableado estructurado categoría 6/6A\",\n      \"Redes inalámbricas industriales\",\n      \"Antenas y radiocomunicación\",\n      \"Fibra óptica para larga distancia\"\n    ],\n    benefits: \"Comunicación confiable en entornos extremos, garantizando operaciones continuas y seguras.\",\n    imageUrl: \"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    deliveryTime: \"10-20 días\",\n    coverage: \"Nacional\"\n  },\n  {\n    id: \"seguridad-industrial\",\n    title: \"Seguridad Industrial Integral\",\n    description: \"Protección completa para trabajadores: desde EPP certificado hasta sistemas de control de acceso.\",\n    icon: Shield,\n    features: [\n      \"EPP certificado (cascos, guantes, calzado)\",\n      \"Equipos de protección colectiva\",\n      \"Señalética de seguridad\",\n      \"Sistemas de detección de gases\"\n    ],\n    benefits: \"Cumplimiento normativo y protección máxima del personal en ambientes de alto riesgo.\",\n    imageUrl: \"https://images.unsplash.com/photo-1556740758-90de374c12ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    deliveryTime: \"5-15 días\",\n    coverage: \"Nacional\"\n  },\n  {\n    id: \"mantenimiento\",\n    title: \"Mantención Especializada\",\n    description: \"Servicios de mantención preventiva y correctiva para equipos industriales críticos.\",\n    icon: Settings,\n    features: [\n      \"Mantención de sistemas HVAC\",\n      \"Inspección de equipos de seguridad\",\n      \"Calibración de instrumentos\",\n      \"Soporte técnico especializado\"\n    ],\n    benefits: \"Maximiza vida útil de equipos, reduce tiempos de parada y asegura operaciones continuas.\",\n    imageUrl: \"https://images.unsplash.com/photo-1504148455328-c376907d081c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    deliveryTime: \"2-7 días\",\n    coverage: \"Nacional\"\n  }\n];\n\nconst serviceProcess = [\n  {\n    step: 1,\n    title: \"Evaluación Técnica\",\n    description: \"Nuestros especialistas evalúan tus requerimientos específicos\",\n    icon: CheckCircle\n  },\n  {\n    step: 2,\n    title: \"Propuesta Personalizada\",\n    description: \"Diseñamos la solución perfecta para tu operación\",\n    icon: Settings\n  },\n  {\n    step: 3,\n    title: \"Implementación\",\n    description: \"Ejecutamos el proyecto con equipos certificados\",\n    icon: Wrench\n  },\n  {\n    step: 4,\n    title: \"Soporte Continuo\",\n    description: \"Mantención y soporte técnico especializado\",\n    icon: Headphones\n  }\n];\n\nexport default function Services() {\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 py-20\">\n        <div className=\"absolute inset-0 bg-black opacity-50\" />\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-white mb-6\">\n            Servicios Industriales <span className=\"text-primary\">Especializados</span>\n          </h1>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto mb-8\" style={{ fontSize: '20px' }}>\n            Soluciones técnicas integrales para climatización, telecomunicaciones y mantención industrial. \n            Más de 10 años respaldando operaciones críticas en Chile.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n            <Link href=\"/contact\">\n              <Button className=\"sumerica-yellow px-8 py-4 text-lg font-bold hover:shadow-xl transition-all\">\n                <Phone className=\"mr-2 h-5 w-5\" />\n                Solicitar Evaluación Técnica\n              </Button>\n            </Link>\n            <div className=\"flex items-center text-gray-300\">\n              <Clock className=\"mr-2 h-5 w-5\" />\n              <span>Respuesta en 24h hábiles</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20 bg-gradient-to-b from-gray-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-gray-900\">\n              Nuestros Servicios Especializados\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Soluciones técnicas diseñadas específicamente para las demandas del sector industrial chileno\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <div\n                key={service.id}\n                className=\"group bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden hover:-translate-y-1\"\n                data-testid={`card-service-${service.id}`}\n              >\n                <div className=\"relative h-64 overflow-hidden\">\n                  <img\n                    src={service.imageUrl}\n                    alt={service.title}\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                    loading={index < 2 ? \"eager\" : \"lazy\"}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\" />\n                  <div className=\"absolute top-4 left-4\">\n                    <div className=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center shadow-lg\">\n                      <service.icon className=\"w-6 h-6 text-black\" />\n                    </div>\n                  </div>\n                  <div className=\"absolute bottom-4 right-4 flex gap-2\">\n                    <Badge variant=\"secondary\" className=\"bg-white/90 text-gray-800\">\n                      {service.deliveryTime}\n                    </Badge>\n                    <Badge variant=\"secondary\" className=\"bg-white/90 text-gray-800\">\n                      {service.coverage}\n                    </Badge>\n                  </div>\n                </div>\n\n                <div className=\"p-8\">\n                  <h3 className=\"text-2xl font-bold mb-4 text-gray-900\">\n                    {service.title}\n                  </h3>\n                  <p className=\"text-gray-600 mb-6 leading-relaxed\" style={{ fontSize: '16px' }}>\n                    {service.description}\n                  </p>\n\n                  <div className=\"mb-6\">\n                    <h4 className=\"font-semibold text-gray-900 mb-3\">Incluye:</h4>\n                    <ul className=\"space-y-2\">\n                      {service.features.map((feature, idx) => (\n                        <li key={idx} className=\"flex items-start\">\n                          <CheckCircle className=\"w-5 h-5 text-primary mr-2 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-gray-600\" style={{ fontSize: '15px' }}>{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n\n                  <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n                    <p className=\"text-gray-700 text-sm leading-relaxed\">\n                      <strong>Beneficio clave:</strong> {service.benefits}\n                    </p>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full border-2 border-primary text-primary hover:bg-primary hover:text-black font-semibold py-3 transition-all duration-300\"\n                      aria-label={`Solicitar cotización para ${service.title}`}\n                      data-testid={`button-quote-${service.id}`}\n                    >\n                      Solicitar Cotización\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-white\">\n              Nuestro Proceso de Trabajo\n            </h2>\n            <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n              Metodología probada que garantiza resultados excepcionales en cada proyecto\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {serviceProcess.map((step, index) => (\n              <div\n                key={step.step}\n                className=\"text-center\"\n                data-testid={`process-step-${step.step}`}\n              >\n                <div className=\"relative mb-6\">\n                  <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto shadow-lg\">\n                    <step.icon className=\"w-8 h-8 text-black\" />\n                  </div>\n                  <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-gray-800 text-primary rounded-full flex items-center justify-center border-2 border-primary text-sm font-bold\">\n                    {step.step}\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-bold text-white mb-3\">\n                  {step.title}\n                </h3>\n                <p className=\"text-gray-300 leading-relaxed\" style={{ fontSize: '15px' }}>\n                  {step.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 sumerica-yellow\">\n        <div className=\"max-w-4xl mx-auto text-center px-4\">\n          <h2 className=\"text-4xl font-bold mb-4 text-primary-foreground\">\n            ¿Necesitas una Solución Técnica Específica?\n          </h2>\n          <p className=\"text-xl mb-8 text-primary-foreground/90\" style={{ fontSize: '20px' }}>\n            Nuestro equipo de especialistas diseña la solución perfecta para tu operación\n          </p>\n          <Link href=\"/contact\">\n            <Button className=\"bg-white text-black px-10 py-4 text-lg font-bold hover:bg-gray-100 hover:shadow-xl transition-all duration-300\">\n              <Phone className=\"mr-2 h-5 w-5\" />\n              Contactar Especialista\n            </Button>\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":11750},"client/src/components/pdf/ProductDatasheet.tsx":{"content":"import { Document, Page, Text, View, StyleSheet, Image, Font } from '@react-pdf/renderer';\nimport type { Product, Dimensions, Specifications } from '@shared/schema';\nimport sumericalogo from '@assets/generated_images/SUMERICA_corporate_logo_design_18758578.png';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#ffffff',\n    padding: 40,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    flexDirection: 'row',\n    marginBottom: 30,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '2 solid #FFD700',\n    paddingBottom: 15,\n  },\n  logo: {\n    width: 120,\n    height: 40,\n  },\n  company: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 12,\n    color: '#666666',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  productInfo: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    backgroundColor: '#f8f9fa',\n    padding: 15,\n    borderRadius: 5,\n  },\n  productDetail: {\n    fontSize: 10,\n    marginBottom: 5,\n  },\n  section: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n    marginBottom: 10,\n    borderBottom: '1 solid #e0e0e0',\n    paddingBottom: 5,\n  },\n  table: {\n    display: 'flex',\n    width: 'auto',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n  },\n  tableRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n    borderBottomStyle: 'solid',\n    minHeight: 25,\n    alignItems: 'center',\n  },\n  tableColHeader: {\n    width: '40%',\n    backgroundColor: '#f8f9fa',\n    padding: 8,\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  tableCol: {\n    width: '60%',\n    padding: 8,\n    fontSize: 10,\n  },\n  featureList: {\n    marginLeft: 10,\n  },\n  featureItem: {\n    fontSize: 10,\n    marginBottom: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  bullet: {\n    width: 4,\n    height: 4,\n    backgroundColor: '#FFD700',\n    borderRadius: 2,\n    marginRight: 8,\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 30,\n    left: 40,\n    right: 40,\n    textAlign: 'center',\n    fontSize: 8,\n    color: '#666666',\n    borderTop: '1 solid #e0e0e0',\n    paddingTop: 10,\n  },\n  certificationBadge: {\n    backgroundColor: '#fff3cd',\n    padding: 5,\n    marginBottom: 5,\n    borderRadius: 3,\n    fontSize: 9,\n    color: '#856404',\n  },\n});\n\ninterface ProductDatasheetProps {\n  product: Product;\n}\n\nexport default function ProductDatasheet({ product }: ProductDatasheetProps) {\n  const formatPrice = (priceCents: number | null, currency: string = 'CLP') => {\n    if (!priceCents) return 'Consultar precio';\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: currency,\n    }).format(priceCents / 100);\n  };\n\n  const currentDate = new Date().toLocaleDateString('es-CL', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {/* Header */}\n        <View style={styles.header}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', gap: 15 }}>\n            <Image src={sumericalogo} style={styles.logo} />\n            <Text style={styles.company}>SUMERICA</Text>\n          </View>\n          <Text style={{ fontSize: 10, color: '#666666' }}>\n            Ficha Técnica - {currentDate}\n          </Text>\n        </View>\n\n        {/* Product Title */}\n        <Text style={styles.title}>{product.name}</Text>\n        <Text style={styles.subtitle}>\n          {product.brand} - Modelo {product.model || 'N/A'} - Código: {product.code || 'N/A'}\n        </Text>\n\n        {/* Product Basic Info */}\n        <View style={styles.productInfo}>\n          <View style={{ width: '48%' }}>\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Categoría: </Text>{product.category}\n            </Text>\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Precio: </Text>\n              {formatPrice(product.priceCents, product.currency || 'CLP')}\n            </Text>\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Disponibilidad: </Text>\n              {product.availability === 'available' ? 'En stock' : 'Consultar disponibilidad'}\n            </Text>\n          </View>\n          <View style={{ width: '48%' }}>\n            {product.series && (\n              <Text style={styles.productDetail}>\n                <Text style={{ fontWeight: 'bold' }}>Serie: </Text>{product.series}\n              </Text>\n            )}\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Cantidad mínima: </Text>\n              {product.minOrderQuantity || 1} unidades\n            </Text>\n            {product.warranty && (\n              <Text style={styles.productDetail}>\n                <Text style={{ fontWeight: 'bold' }}>Garantía: </Text>{product.warranty}\n              </Text>\n            )}\n          </View>\n        </View>\n\n        {/* Description */}\n        {product.description && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Descripción</Text>\n            <Text style={{ fontSize: 11, lineHeight: 1.4 }}>\n              {product.description}\n            </Text>\n          </View>\n        )}\n\n        {/* Technical Specifications */}\n        {product.specifications && typeof product.specifications === 'object' && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Especificaciones Técnicas</Text>\n            <View style={styles.table}>\n              {Object.entries(product.specifications as Specifications).map(([key, value]) => (\n                <View style={styles.tableRow} key={key}>\n                  <Text style={styles.tableColHeader}>\n                    {key.replace(/([A-Z])/g, ' $1').trim()}:\n                  </Text>\n                  <Text style={styles.tableCol}>{String(value)}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n\n        {/* Dimensions */}\n        {product.dimensions && typeof product.dimensions === 'object' && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Dimensiones y Peso</Text>\n            <View style={styles.table}>\n              {(product.dimensions as Dimensions).width && (\n                <View style={styles.tableRow}>\n                  <Text style={styles.tableColHeader}>Ancho:</Text>\n                  <Text style={styles.tableCol}>\n                    {(product.dimensions as Dimensions).width} {(product.dimensions as Dimensions).unit || 'cm'}\n                  </Text>\n                </View>\n              )}\n              {(product.dimensions as Dimensions).height && (\n                <View style={styles.tableRow}>\n                  <Text style={styles.tableColHeader}>Alto:</Text>\n                  <Text style={styles.tableCol}>\n                    {(product.dimensions as Dimensions).height} {(product.dimensions as Dimensions).unit || 'cm'}\n                  </Text>\n                </View>\n              )}\n              {(product.dimensions as Dimensions).depth && (\n                <View style={styles.tableRow}>\n                  <Text style={styles.tableColHeader}>Profundidad:</Text>\n                  <Text style={styles.tableCol}>\n                    {(product.dimensions as Dimensions).depth} {(product.dimensions as Dimensions).unit || 'cm'}\n                  </Text>\n                </View>\n              )}\n              {(product.dimensions as Dimensions).weight && (\n                <View style={styles.tableRow}>\n                  <Text style={styles.tableColHeader}>Peso:</Text>\n                  <Text style={styles.tableCol}>\n                    {(product.dimensions as Dimensions).weight} {(product.dimensions as Dimensions).weightUnit || 'kg'}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </View>\n        )}\n\n        {/* Features */}\n        {product.features && product.features.length > 0 && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Características Principales</Text>\n            <View style={styles.featureList}>\n              {product.features.map((feature, index) => (\n                <View style={styles.featureItem} key={index}>\n                  <View style={styles.bullet} />\n                  <Text style={{ fontSize: 10 }}>{feature}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n\n        {/* Materials */}\n        {product.materials && product.materials.length > 0 && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Materiales de Construcción</Text>\n            <View style={styles.featureList}>\n              {product.materials.map((material, index) => (\n                <View style={styles.featureItem} key={index}>\n                  <View style={styles.bullet} />\n                  <Text style={{ fontSize: 10 }}>{material}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n\n        {/* Applications */}\n        {product.applications && product.applications.length > 0 && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Aplicaciones Recomendadas</Text>\n            <View style={styles.featureList}>\n              {product.applications.map((app, index) => (\n                <View style={styles.featureItem} key={index}>\n                  <View style={styles.bullet} />\n                  <Text style={{ fontSize: 10 }}>{app}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n\n        {/* Certifications */}\n        {product.certifications && product.certifications.length > 0 && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Certificaciones y Normas</Text>\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n              {product.certifications.map((cert, index) => (\n                <View style={styles.certificationBadge} key={index}>\n                  <Text>{cert}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n\n        {/* Installation Guide */}\n        {product.installationGuide && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Guía de Instalación</Text>\n            <Text style={{ fontSize: 10, lineHeight: 1.4 }}>\n              {product.installationGuide}\n            </Text>\n          </View>\n        )}\n\n        {/* Footer */}\n        <Text style={styles.footer}>\n          SUMERICA - Equipos Industriales y Climatización | www.sumerica.cl | contacto@sumerica.cl{'\\n'}\n          Este documento es una ficha técnica generada automáticamente. Para cotizaciones oficiales, contacte a nuestro equipo comercial.\n        </Text>\n      </Page>\n    </Document>\n  );\n}","size_bytes":11297},"client/src/pages/product.tsx":{"content":"import { useRoute, useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { ArrowLeft, Download, MessageCircle, Star, CheckCircle, Truck, Shield, Award, Settings, Ruler, ShieldCheck, Wrench, Briefcase, HardHat } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useState, useEffect } from \"react\";\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport ProductDatasheet from '@/components/pdf/ProductDatasheet';\nimport QuoteRequestModal from '@/components/QuoteRequestModal';\nimport RelatedProducts from '@/components/RelatedProducts';\nimport type { Product, Dimensions, Specifications } from \"@shared/schema\";\n\nexport default function ProductPage() {\n  const [, params] = useRoute(\"/product/:id\");\n  const [location] = useLocation();\n  const productId = params?.id;\n\n  const { data: product, isLoading, error } = useQuery<Product>({\n    queryKey: ['/api/products', productId],\n    enabled: !!productId,\n  });\n\n  // Update document head for SEO when product loads\n  useEffect(() => {\n    if (product) {\n      // Update title\n      document.title = `${product.name} - ${product.brand} | SUMERICA`;\n      \n      // Update meta description\n      const metaDescription = document.querySelector('meta[name=\"description\"]');\n      if (metaDescription) {\n        metaDescription.setAttribute('content', \n          `${product.description || product.name} - Modelo ${product.model || ''} de ${product.brand}. Especificaciones técnicas, ficha técnica PDF y cotización rápida disponible en SUMERICA.`\n        );\n      }\n      \n      // Update Open Graph tags\n      const ogTitle = document.querySelector('meta[property=\"og:title\"]');\n      if (ogTitle) {\n        ogTitle.setAttribute('content', `${product.name} - ${product.brand} | SUMERICA`);\n      }\n      \n      const ogDescription = document.querySelector('meta[property=\"og:description\"]');\n      if (ogDescription) {\n        ogDescription.setAttribute('content', product.description || product.name);\n      }\n      \n      const ogImage = document.querySelector('meta[property=\"og:image\"]');\n      if (ogImage && product.imageUrl) {\n        ogImage.setAttribute('content', product.imageUrl);\n      }\n      \n      // Update canonical URL\n      let canonical = document.querySelector('link[rel=\"canonical\"]');\n      if (!canonical) {\n        canonical = document.createElement('link');\n        canonical.setAttribute('rel', 'canonical');\n        document.head.appendChild(canonical);\n      }\n      canonical.setAttribute('href', `https://sumerica.cl/product/${productId}`);\n    }\n  }, [product, productId]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (error || !product) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Producto no encontrado</h1>\n          <Link href=\"/catalog\">\n            <Button>Volver al catálogo</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const formatPrice = (priceCents: number | null, currency: string = 'CLP') => {\n    if (!priceCents) return 'Consultar precio';\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: currency,\n    }).format(priceCents / 100);\n  };\n\n  // Product benefits for display\n  const productBenefits = [\n    { \n      icon: Truck, \n      title: 'Entrega Express', \n      description: 'Despacho en 24-48 horas en RM',\n      color: 'from-blue-500 to-blue-600',\n      bgColor: 'bg-blue-50'\n    },\n    { \n      icon: Shield, \n      title: 'Garantía Premium', \n      description: product.warranty || 'Garantía extendida incluida',\n      color: 'from-green-500 to-green-600',\n      bgColor: 'bg-green-50'\n    },\n    { \n      icon: Award, \n      title: 'Certificaciones Internacionales', \n      description: product.certifications?.join(', ') || 'Estándares ISO y CE',\n      color: 'from-yellow-500 to-yellow-600',\n      bgColor: 'bg-yellow-50'\n    },\n    { \n      icon: CheckCircle, \n      title: 'Instalación Especializada', \n      description: 'Soporte técnico y puesta en marcha',\n      color: 'from-purple-500 to-purple-600',\n      bgColor: 'bg-purple-50'\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Navigation Breadcrumb */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center space-x-2 text-sm\">\n            <Link href=\"/\" className=\"text-gray-500 hover:text-gray-700\">Inicio</Link>\n            <span className=\"text-gray-400\">/</span>\n            <Link href=\"/catalog\" className=\"text-gray-500 hover:text-gray-700\">Catálogo</Link>\n            <span className=\"text-gray-400\">/</span>\n            <span className=\"text-gray-900 font-medium\">{product.name}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/catalog\">\n            <Button variant=\"ghost\" size=\"sm\" className=\"mb-4\" data-testid=\"button-back-catalog\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Volver al catálogo\n            </Button>\n          </Link>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 mb-16\">\n          {/* Product Image */}\n          <div className=\"space-y-4\">\n            <div className=\"aspect-square bg-gradient-to-br from-gray-50 to-white rounded-3xl shadow-2xl overflow-hidden group relative border border-gray-100\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-yellow-50 opacity-20\"></div>\n              <img\n                src={product.imageUrl || 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800'}\n                alt={product.name}\n                className=\"w-full h-full object-cover group-hover:scale-110 transition-all duration-700 ease-out relative z-10\"\n                loading=\"eager\"\n                data-testid=\"img-product-main\"\n              />\n              <div className=\"absolute inset-0 bg-black opacity-0 group-hover:opacity-5 transition-opacity duration-700 z-20\"></div>\n            </div>\n            \n            {/* Product Trust Indicators */}\n            <div className=\"grid grid-cols-3 gap-3\">\n              <div className=\"bg-white rounded-xl p-3 text-center shadow-md border border-gray-100\">\n                <Shield className=\"w-5 h-5 mx-auto text-green-600 mb-1\" />\n                <span className=\"text-xs font-medium text-gray-700\">Certificado</span>\n              </div>\n              <div className=\"bg-white rounded-xl p-3 text-center shadow-md border border-gray-100\">\n                <Truck className=\"w-5 h-5 mx-auto text-blue-600 mb-1\" />\n                <span className=\"text-xs font-medium text-gray-700\">Envío Rápido</span>\n              </div>\n              <div className=\"bg-white rounded-xl p-3 text-center shadow-md border border-gray-100\">\n                <Star className=\"w-5 h-5 mx-auto text-yellow-500 mb-1\" />\n                <span className=\"text-xs font-medium text-gray-700\">Premium</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Product Info */}\n          <div className=\"space-y-8\">\n            {/* Header */}\n            <div className=\"bg-gradient-to-r from-white via-yellow-50 to-white p-8 rounded-3xl border border-yellow-100 shadow-xl\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Badge variant=\"secondary\" className=\"text-sm px-3 py-1 bg-gray-900 text-white\">{product.category}</Badge>\n                {product.availability === 'available' && (\n                  <Badge variant=\"default\" className=\"text-sm px-3 py-1 bg-gradient-to-r from-green-500 to-green-600 text-white shadow-md\">\n                    <CheckCircle className=\"w-3 h-3 mr-1\" />\n                    En Stock\n                  </Badge>\n                )}\n              </div>\n              \n              <h1 className=\"text-5xl font-black text-gray-900 mb-4 leading-tight bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text\" data-testid=\"text-product-name\">\n                {product.name}\n              </h1>\n              \n              <div className=\"flex items-center gap-6 mb-6\">\n                <div className=\"flex items-center gap-2\">\n                  <Award className=\"w-5 h-5 text-yellow-600\" />\n                  <span className=\"text-xl font-semibold text-gray-800\">{product.brand}</span>\n                </div>\n                {product.code && (\n                  <span className=\"text-sm text-gray-600 bg-white/80 px-3 py-2 rounded-lg border border-gray-200 shadow-sm\">\n                    Código: <span className=\"font-mono font-bold\">{product.code}</span>\n                  </span>\n                )}\n              </div>\n              \n              {/* Price */}\n              <div className=\"bg-white rounded-2xl p-6 border-2 border-yellow-200 shadow-lg\">\n                <div className=\"text-sm text-gray-600 mb-1\">Precio desde</div>\n                <span className=\"text-4xl font-black text-gray-900 tracking-tight\" data-testid=\"text-product-price\">\n                  {formatPrice(product.priceCents, product.currency || 'CLP')}\n                </span>\n                <div className=\"text-sm text-gray-500 mt-1\">IVA incluido</div>\n              </div>\n            </div>\n\n            {/* Description */}\n            {product.description && (\n              <div>\n                <h2 className=\"text-xl font-semibold mb-3\">Descripción</h2>\n                <p className=\"text-gray-700 leading-relaxed\">{product.description}</p>\n              </div>\n            )}\n\n            {/* Quick Actions */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <QuoteRequestModal \n                product={product}\n                trigger={\n                  <Button className=\"w-full sumerica-yellow\" size=\"lg\" data-testid=\"button-quote-request\">\n                    <MessageCircle className=\"w-5 h-5 mr-2\" />\n                    Solicitar Cotización\n                  </Button>\n                }\n              />\n              \n              <PDFDownloadLink document={<ProductDatasheet product={product} />} fileName={`${product.name.replace(/[^a-z0-9]/gi, '_')}_ficha_tecnica.pdf`}>\n                {({ loading, url, error, blob }) => (\n                  <Button variant=\"outline\" className=\"w-full\" size=\"lg\" disabled={loading} data-testid=\"button-pdf-download\">\n                    <Download className=\"w-5 h-5 mr-2\" />\n                    {loading ? 'Generando...' : 'Descargar Ficha PDF'}\n                  </Button>\n                )}\n              </PDFDownloadLink>\n            </div>\n          </div>\n        </div>\n\n        {/* Technical Specifications */}\n        <div className=\"mb-16\">\n          <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">Especificaciones Técnicas</h2>\n            \n            <Accordion type=\"single\" collapsible className=\"w-full space-y-4\">\n              {/* General Specifications */}\n              {product.specifications && typeof product.specifications === 'object' && (\n                <AccordionItem value=\"general\" className=\"border rounded-lg px-6\" data-testid=\"accordion-general-specs\">\n                  <AccordionTrigger className=\"hover:no-underline\">\n                    <div className=\"flex items-center\">\n                      <Settings className=\"w-5 h-5 mr-3 text-primary\" />\n                      <span className=\"text-lg font-semibold\">Especificaciones Generales</span>\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent className=\"pt-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {Object.entries(product.specifications as Record<string, any>).map(([key, value]) => (\n                        <div key={key} className=\"flex justify-between border-b border-gray-100 pb-2\">\n                          <span className=\"font-medium text-gray-600 capitalize\">{key.replace(/([A-Z])/g, ' $1')}</span>\n                          <span className=\"text-gray-900\">{String(value)}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </AccordionContent>\n                </AccordionItem>\n              )}\n\n              {/* Dimensions */}\n              {product.dimensions && typeof product.dimensions === 'object' && (\n                <AccordionItem value=\"dimensions\" className=\"border rounded-lg px-6\" data-testid=\"accordion-dimensions\">\n                  <AccordionTrigger className=\"hover:no-underline\">\n                    <div className=\"flex items-center\">\n                      <Ruler className=\"w-5 h-5 mr-3 text-primary\" />\n                      <span className=\"text-lg font-semibold\">Dimensiones y Peso</span>\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent className=\"pt-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {Object.entries(product.dimensions as Record<string, any>).map(([key, value]) => (\n                        <div key={key} className=\"flex justify-between border-b border-gray-100 pb-2\">\n                          <span className=\"font-medium text-gray-600 capitalize\">{key.replace(/([A-Z])/g, ' $1')}</span>\n                          <span className=\"text-gray-900\">{String(value)}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </AccordionContent>\n                </AccordionItem>\n              )}\n\n              {/* Certifications */}\n              {product.certifications && product.certifications.length > 0 && (\n                <AccordionItem value=\"certifications\" className=\"border rounded-lg px-6\" data-testid=\"accordion-certifications\">\n                  <AccordionTrigger className=\"hover:no-underline\">\n                    <div className=\"flex items-center\">\n                      <ShieldCheck className=\"w-5 h-5 mr-3 text-primary\" />\n                      <span className=\"text-lg font-semibold\">Certificaciones y Normas</span>\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent className=\"pt-4\">\n                    <div className=\"flex flex-wrap gap-2\">\n                      {product.certifications.map((cert, index) => (\n                        <Badge key={index} variant=\"outline\" className=\"text-sm\">\n                          {cert}\n                        </Badge>\n                      ))}\n                    </div>\n                  </AccordionContent>\n                </AccordionItem>\n              )}\n\n              {/* Installation & Maintenance */}\n              <AccordionItem value=\"installation\" className=\"border rounded-lg px-6\" data-testid=\"accordion-installation\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center\">\n                    <Wrench className=\"w-5 h-5 mr-3 text-primary\" />\n                    <span className=\"text-lg font-semibold\">Instalación y Mantención</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"pt-4\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Instalación</h4>\n                      <p className=\"text-gray-700\">Instalación especializada disponible. Coordinamos con tu equipo técnico para una implementación sin contratiempos.</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Garantía</h4>\n                      <p className=\"text-gray-700\">{product.warranty || 'Garantía estándar incluida según especificaciones del fabricante.'}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Soporte Técnico</h4>\n                      <p className=\"text-gray-700\">Asesoría técnica especializada y soporte post-venta disponible.</p>\n                    </div>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n\n              {/* Applications */}\n              <AccordionItem value=\"applications\" className=\"border rounded-lg px-6\" data-testid=\"accordion-applications\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center\">\n                    <Briefcase className=\"w-5 h-5 mr-3 text-primary\" />\n                    <span className=\"text-lg font-semibold\">Aplicaciones Recomendadas</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"pt-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"flex items-start space-x-3\">\n                      <HardHat className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                      <div>\n                        <h5 className=\"font-semibold\">Minería</h5>\n                        <p className=\"text-sm text-gray-600\">Ideal para faenas mineras y aplicaciones industriales exigentes.</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-start space-x-3\">\n                      <Shield className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                      <div>\n                        <h5 className=\"font-semibold\">Industrial</h5>\n                        <p className=\"text-sm text-gray-600\">Perfecto para plantas industriales y aplicaciones comerciales.</p>\n                      </div>\n                    </div>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </div>\n        </div>\n\n        {/* Product Benefits Section */}\n        <div className=\"mb-16\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-4xl font-black text-gray-900 mb-6 bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text\">\n              ¿Por qué elegir SUMERICA?\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              Equipos industriales de <span className=\"font-semibold text-yellow-600\">calidad superior</span> con garantías extendidas y soporte técnico especializado para proyectos exigentes.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {productBenefits.map((benefit, index) => (\n              <Card key={index} className=\"relative text-center border-0 shadow-xl hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 overflow-hidden\" data-testid={`benefit-card-${index}`}>\n                <div className={`absolute inset-0 bg-gradient-to-br ${benefit.color} opacity-5`}></div>\n                <CardHeader className=\"pb-4 relative z-10\">\n                  <div className={`w-20 h-20 ${benefit.bgColor} rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg border border-white`}>\n                    <benefit.icon className={`w-10 h-10 bg-gradient-to-br ${benefit.color} bg-clip-text text-transparent`} />\n                  </div>\n                  <CardTitle className=\"text-lg font-bold text-gray-900 leading-tight\">{benefit.title}</CardTitle>\n                </CardHeader>\n                <CardContent className=\"relative z-10\">\n                  <p className=\"text-gray-600 text-sm leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Related Products Section */}\n        <RelatedProducts currentProduct={product} />\n      </div>\n    </div>\n  );\n}","size_bytes":20611},"client/src/components/QuoteRequestModal.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { z } from \"zod\";\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { insertQuoteSchema } from \"@shared/schema\";\nimport type { Product, Quote } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { MessageCircle, Send, Loader2, Download, CheckCircle } from \"lucide-react\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport QuoteRequestPDF from '@/components/pdf/QuoteRequestPDF';\n\n// Form schema for user input fields only (excluding products array)\nconst quoteFormSchema = insertQuoteSchema.omit({ products: true }).extend({\n  quantity: z.number().int().positive().min(1, \"La cantidad debe ser al menos 1\"),\n});\n\ntype QuoteFormData = z.infer<typeof quoteFormSchema>;\n\ninterface QuoteRequestModalProps {\n  product: Product;\n  trigger?: React.ReactNode;\n}\n\nexport default function QuoteRequestModal({ product, trigger }: QuoteRequestModalProps) {\n  const [open, setOpen] = useState(false);\n  const [submittedQuote, setSubmittedQuote] = useState<{quote: Quote, formData: QuoteFormData} | null>(null);\n  const { toast } = useToast();\n  \n  const form = useForm<QuoteFormData>({\n    resolver: zodResolver(quoteFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      company: \"\",\n      phone: \"\",\n      customerMessage: \"\",\n      quantity: 1,\n    },\n  });\n\n  const createQuoteMutation = useMutation({\n    mutationFn: async (data: QuoteFormData): Promise<Quote> => {\n      // Transform form data to match the expected API format\n      const quoteData = {\n        name: data.name,\n        email: data.email,\n        company: data.company || undefined,\n        phone: data.phone,\n        customerMessage: data.customerMessage || undefined,\n        products: [{\n          productId: product.id,\n          quantity: data.quantity,\n          notes: `Solicitud para: ${product.name} - ${product.brand} ${product.model || ''}`\n        }]\n      };\n      \n      const response = await fetch('/api/quotes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(quoteData),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to create quote');\n      }\n      \n      return response.json();\n    },\n    onSuccess: (quote: Quote) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/quotes'] });\n      \n      // Store the submitted quote and form data for PDF generation\n      setSubmittedQuote({ quote, formData: form.getValues() });\n      \n      toast({\n        title: \"Cotización enviada con éxito\",\n        description: \"Hemos recibido tu solicitud de cotización. Te contactaremos pronto con la información solicitada.\",\n      });\n      \n      // Don't close the modal immediately to show the success state with PDF download option\n      form.reset();\n    },\n    onError: (error) => {\n      console.error('Error creating quote:', error);\n      toast({\n        title: \"Error al enviar cotización\",\n        description: \"Hubo un problema al procesar tu solicitud. Por favor intenta nuevamente.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: QuoteFormData) => {\n    createQuoteMutation.mutate(data);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n    setSubmittedQuote(null);\n    form.reset();\n  };\n\n  const defaultTrigger = (\n    <Button className=\"sumerica-yellow flex-1\" size=\"lg\" data-testid=\"button-request-quote\">\n      <MessageCircle className=\"w-5 h-5 mr-2\" />\n      Solicitar Cotización\n    </Button>\n  );\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {trigger || defaultTrigger}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>\n            {submittedQuote ? 'Cotización Enviada' : 'Solicitar Cotización'}\n          </DialogTitle>\n          <DialogDescription>\n            {submittedQuote ? (\n              <>Tu solicitud ha sido enviada exitosamente. Puedes descargar un resumen de tu cotización.</>\n            ) : (\n              <>Completa el formulario para recibir una cotización personalizada para <strong>{product.name}</strong></>\n            )}\n          </DialogDescription>\n        </DialogHeader>\n\n        {submittedQuote ? (\n          /* Success State with PDF Download */\n          <div className=\"text-center space-y-6\">\n            <div className=\"flex justify-center\">\n              <CheckCircle className=\"w-16 h-16 text-green-500\" />\n            </div>\n            \n            <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-700\">\n              <h3 className=\"font-semibold text-green-800 dark:text-green-200 mb-2\">\n                Solicitud #{submittedQuote.quote.id?.slice(-8)}\n              </h3>\n              <p className=\"text-sm text-green-600 dark:text-green-300\">\n                Tu solicitud de cotización para <strong>{product.name}</strong> ha sido enviada correctamente.\n              </p>\n            </div>\n\n            <div className=\"flex flex-col gap-3\">\n              <PDFDownloadLink\n                document={\n                  <QuoteRequestPDF \n                    quoteData={submittedQuote.formData} \n                    product={product}\n                    quoteId={submittedQuote.quote.id?.slice(-8)}\n                  />\n                }\n                fileName={`cotizacion-${product.name.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.pdf`}\n                style={{ textDecoration: 'none', width: '100%' }}\n              >\n                {({ loading }: { loading: boolean }) => (\n                  <Button size=\"lg\" className=\"w-full sumerica-yellow\" disabled={loading} data-testid=\"button-download-quote-pdf\">\n                    <Download className=\"w-5 h-5 mr-2\" />\n                    {loading ? 'Generando PDF...' : 'Descargar Resumen de Cotización'}\n                  </Button>\n                )}\n              </PDFDownloadLink>\n              \n              <Button variant=\"outline\" onClick={handleCloseModal} data-testid=\"button-close-success\">\n                Cerrar\n              </Button>\n            </div>\n          </div>\n        ) : (\n          /* Form State */\n          <>\n            {/* Product Summary */}\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border\">\n              <div className=\"flex items-start space-x-4\">\n                {product.imageUrl && (\n                  <img \n                    src={product.imageUrl} \n                    alt={product.name}\n                    className=\"w-16 h-16 object-cover rounded\"\n                  />\n                )}\n                <div className=\"flex-1 min-w-0\">\n                  <h4 className=\"font-semibold text-sm\">{product.name}</h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {product.brand} {product.model && `- ${product.model}`}\n                  </p>\n                  {product.code && (\n                    <p className=\"text-xs text-gray-500\">Código: {product.code}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            {/* Personal Information */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Nombre completo *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Tu nombre\" data-testid=\"input-quote-name\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Correo electrónico *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"tu@empresa.com\" type=\"email\" data-testid=\"input-quote-email\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Empresa</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Nombre de tu empresa\" data-testid=\"input-quote-company\" {...field} value={field.value || \"\"} />\n                    </FormControl>\n                    <FormDescription>Campo opcional</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Teléfono *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"+56 9 1234 5678\" data-testid=\"input-quote-phone\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Quantity */}\n            <FormField\n              control={form.control}\n              name=\"quantity\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Cantidad requerida *</FormLabel>\n                  <FormControl>\n                    <div className=\"flex items-center space-x-2\">\n                      <Input \n                        type=\"number\" \n                        min=\"1\"\n                        className=\"w-24\"\n                        data-testid=\"input-quote-quantity\"\n                        {...field} \n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}\n                      />\n                      <Label className=\"text-sm text-gray-600\">unidades</Label>\n                      {product.minOrderQuantity && product.minOrderQuantity > 1 && (\n                        <span className=\"text-xs text-gray-500\">\n                          (Mín: {product.minOrderQuantity})\n                        </span>\n                      )}\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Additional Requirements */}\n            <FormField\n              control={form.control}\n              name=\"customerMessage\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Requisitos adicionales</FormLabel>\n                  <FormControl>\n                    <Textarea \n                      placeholder=\"Describe cualquier requerimiento específico, condiciones de entrega, plazos, etc.\"\n                      className=\"min-h-[80px]\"\n                      data-testid=\"textarea-quote-message\"\n                      {...field}\n                      value={field.value || \"\"}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Campo opcional - ayúdanos a preparar una cotización más precisa\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end space-x-3 pt-4\">\n              <Button \n                type=\"button\" \n                variant=\"outline\" \n                onClick={() => setOpen(false)}\n                data-testid=\"button-quote-cancel\"\n              >\n                Cancelar\n              </Button>\n              <Button \n                type=\"submit\" \n                className=\"sumerica-yellow\"\n                disabled={createQuoteMutation.isPending}\n                data-testid=\"button-quote-submit\"\n              >\n                {createQuoteMutation.isPending ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Enviando...\n                  </>\n                ) : (\n                  <>\n                    <Send className=\"w-4 h-4 mr-2\" />\n                    Enviar Solicitud\n                  </>\n                )}\n              </Button>\n            </div>\n          </form>\n        </Form>\n        </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":13530},"client/src/components/pdf/QuoteRequestPDF.tsx":{"content":"import { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\nimport type { Product } from '@shared/schema';\nimport sumericalogo from '@assets/generated_images/SUMERICA_corporate_logo_design_18758578.png';\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#ffffff',\n    padding: 40,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    flexDirection: 'row',\n    marginBottom: 30,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '2 solid #FFD700',\n    paddingBottom: 15,\n  },\n  logo: {\n    width: 120,\n    height: 40,\n  },\n  company: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 12,\n    color: '#666666',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  section: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n    marginBottom: 10,\n    borderBottom: '1 solid #e0e0e0',\n    paddingBottom: 5,\n  },\n  infoBlock: {\n    backgroundColor: '#f8f9fa',\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  infoRow: {\n    flexDirection: 'row',\n    marginBottom: 8,\n  },\n  infoLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#333',\n    width: '30%',\n  },\n  infoValue: {\n    fontSize: 10,\n    color: '#666',\n    width: '70%',\n  },\n  productSection: {\n    backgroundColor: '#f0f8ff',\n    padding: 15,\n    borderRadius: 5,\n    borderLeft: '4 solid #FFD700',\n  },\n  productName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n    marginBottom: 5,\n  },\n  productDetail: {\n    fontSize: 10,\n    color: '#666',\n    marginBottom: 3,\n  },\n  quantityBlock: {\n    backgroundColor: '#fff3cd',\n    padding: 10,\n    borderRadius: 3,\n    marginTop: 10,\n    textAlign: 'center',\n  },\n  quantityText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#856404',\n  },\n  messageBlock: {\n    backgroundColor: '#f8f9fa',\n    padding: 12,\n    borderRadius: 5,\n    borderLeft: '3 solid #6c757d',\n    marginTop: 15,\n  },\n  messageTitle: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#495057',\n    marginBottom: 5,\n  },\n  messageText: {\n    fontSize: 10,\n    color: '#6c757d',\n    lineHeight: 1.4,\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 30,\n    left: 40,\n    right: 40,\n    textAlign: 'center',\n    fontSize: 8,\n    color: '#666666',\n    borderTop: '1 solid #e0e0e0',\n    paddingTop: 10,\n  },\n  statusBadge: {\n    backgroundColor: '#d4edda',\n    color: '#155724',\n    padding: '5 10',\n    borderRadius: 10,\n    fontSize: 9,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n});\n\ninterface QuoteRequestData {\n  name: string;\n  email: string;\n  company?: string | null;\n  phone: string;\n  customerMessage?: string | null;\n  quantity: number;\n}\n\ninterface QuoteRequestPDFProps {\n  quoteData: QuoteRequestData;\n  product: Product;\n  quoteId?: string;\n}\n\nexport default function QuoteRequestPDF({ quoteData, product, quoteId }: QuoteRequestPDFProps) {\n  const currentDate = new Date().toLocaleDateString('es-CL', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  const formatPrice = (priceCents: number | null, currency: string = 'CLP') => {\n    if (!priceCents) return 'Consultar precio';\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: currency,\n    }).format(priceCents / 100);\n  };\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {/* Header */}\n        <View style={styles.header}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', gap: 15 }}>\n            <Image src={sumericalogo} style={styles.logo} />\n            <Text style={styles.company}>SUMERICA</Text>\n          </View>\n          <Text style={{ fontSize: 10, color: '#666666' }}>\n            Solicitud de Cotización - {currentDate}\n          </Text>\n        </View>\n\n        {/* Title */}\n        <Text style={styles.title}>Solicitud de Cotización</Text>\n        {quoteId && (\n          <View style={styles.statusBadge}>\n            <Text>Solicitud #{quoteId}</Text>\n          </View>\n        )}\n        <Text style={styles.subtitle}>\n          Resumen de la solicitud de cotización enviada\n        </Text>\n\n        {/* Customer Information */}\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Datos del Cliente</Text>\n          <View style={styles.infoBlock}>\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>Nombre:</Text>\n              <Text style={styles.infoValue}>{quoteData.name}</Text>\n            </View>\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>Email:</Text>\n              <Text style={styles.infoValue}>{quoteData.email}</Text>\n            </View>\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>Teléfono:</Text>\n              <Text style={styles.infoValue}>{quoteData.phone}</Text>\n            </View>\n            {quoteData.company && (\n              <View style={styles.infoRow}>\n                <Text style={styles.infoLabel}>Empresa:</Text>\n                <Text style={styles.infoValue}>{quoteData.company}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {/* Product Information */}\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Producto Cotizado</Text>\n          <View style={styles.productSection}>\n            <Text style={styles.productName}>{product.name}</Text>\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Marca: </Text>{product.brand}\n            </Text>\n            {product.model && (\n              <Text style={styles.productDetail}>\n                <Text style={{ fontWeight: 'bold' }}>Modelo: </Text>{product.model}\n              </Text>\n            )}\n            {product.code && (\n              <Text style={styles.productDetail}>\n                <Text style={{ fontWeight: 'bold' }}>Código: </Text>{product.code}\n              </Text>\n            )}\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Categoría: </Text>{product.category}\n            </Text>\n            <Text style={styles.productDetail}>\n              <Text style={{ fontWeight: 'bold' }}>Precio de referencia: </Text>\n              {formatPrice(product.priceCents, product.currency || 'CLP')}\n            </Text>\n            \n            <View style={styles.quantityBlock}>\n              <Text style={styles.quantityText}>\n                Cantidad solicitada: {quoteData.quantity} unidades\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Description */}\n        {product.description && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Descripción del Producto</Text>\n            <Text style={{ fontSize: 10, lineHeight: 1.4, color: '#333' }}>\n              {product.description}\n            </Text>\n          </View>\n        )}\n\n        {/* Customer Message */}\n        {quoteData.customerMessage && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Requisitos Adicionales</Text>\n            <View style={styles.messageBlock}>\n              <Text style={styles.messageTitle}>Mensaje del cliente:</Text>\n              <Text style={styles.messageText}>{quoteData.customerMessage}</Text>\n            </View>\n          </View>\n        )}\n\n        {/* Next Steps */}\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Próximos Pasos</Text>\n          <View style={styles.infoBlock}>\n            <Text style={{ fontSize: 11, color: '#333', marginBottom: 8, fontWeight: 'bold' }}>\n              ¿Qué sucede ahora?\n            </Text>\n            <Text style={{ fontSize: 10, color: '#666', marginBottom: 5 }}>\n              • Nuestro equipo comercial revisará su solicitud en un plazo máximo de 24 horas\n            </Text>\n            <Text style={{ fontSize: 10, color: '#666', marginBottom: 5 }}>\n              • Recibirá una cotización detallada con precios, plazos de entrega y condiciones\n            </Text>\n            <Text style={{ fontSize: 10, color: '#666', marginBottom: 5 }}>\n              • Un ejecutivo se contactará para coordinar detalles específicos de su requerimiento\n            </Text>\n            <Text style={{ fontSize: 10, color: '#666' }}>\n              • Para consultas urgentes, puede contactarnos directamente al teléfono indicado abajo\n            </Text>\n          </View>\n        </View>\n\n        {/* Footer */}\n        <Text style={styles.footer}>\n          SUMERICA - Equipos Industriales y Climatización{'\\n'}\n          Teléfono: +56 2 2345 6789 | Email: ventas@sumerica.cl | www.sumerica.cl{'\\n'}\n          Este documento es una copia de su solicitud de cotización. Guarde este archivo para sus registros.\n        </Text>\n      </Page>\n    </Document>\n  );\n}","size_bytes":9205},"client/src/components/RelatedProducts.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport type { Product } from \"@shared/schema\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, MessageCircle } from \"lucide-react\";\nimport QuoteRequestModal from '@/components/QuoteRequestModal';\n\ninterface RelatedProductsProps {\n  currentProduct: Product;\n  maxProducts?: number;\n}\n\nexport default function RelatedProducts({ currentProduct, maxProducts = 4 }: RelatedProductsProps) {\n  const { data: allProducts, isLoading } = useQuery<Product[]>({\n    queryKey: ['/api/products'],\n  });\n\n  // Filter and sort related products\n  const relatedProducts = allProducts\n    ?.filter(product => product.id !== currentProduct.id) // Exclude current product\n    ?.map(product => {\n      let relevanceScore = 0;\n      \n      // Same category = higher relevance\n      if (product.category === currentProduct.category) {\n        relevanceScore += 10;\n      }\n      \n      // Same brand = moderate relevance\n      if (product.brand === currentProduct.brand) {\n        relevanceScore += 5;\n      }\n      \n      // Same series = high relevance\n      if (product.series && currentProduct.series && product.series === currentProduct.series) {\n        relevanceScore += 8;\n      }\n      \n      // Similar price range (within 30%) = small bonus\n      if (product.priceCents && currentProduct.priceCents) {\n        const priceDiff = Math.abs(product.priceCents - currentProduct.priceCents) / currentProduct.priceCents;\n        if (priceDiff <= 0.3) {\n          relevanceScore += 2;\n        }\n      }\n      \n      return { ...product, relevanceScore };\n    })\n    ?.sort((a, b) => b.relevanceScore - a.relevanceScore) // Sort by relevance\n    ?.slice(0, maxProducts) || []; // Limit results\n\n  const formatPrice = (priceCents: number | null, currency: string = 'CLP') => {\n    if (priceCents === null || priceCents === undefined) return 'Consultar precio';\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: currency,\n    }).format(priceCents / 100);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"mb-16\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">Productos Relacionados</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {Array.from({ length: maxProducts }).map((_, index) => (\n            <div key={index} className=\"animate-pulse\">\n              <div className=\"bg-gray-200 aspect-[4/3] rounded-t-xl\"></div>\n              <div className=\"p-4 space-y-2\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (!relatedProducts.length) {\n    return null; // Don't show section if no related products\n  }\n\n  return (\n    <div className=\"mb-16\" data-testid=\"section-related-products\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Productos Relacionados</h2>\n        <p className=\"text-gray-600 max-w-2xl mx-auto\">\n          Descubre otros productos que podrían interesarte de la misma categoría y marca.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {relatedProducts.map((product) => (\n          <Card key={product.id} className=\"group hover:shadow-lg transition-all duration-300 border-0 shadow-md\" data-testid={`card-related-product-${product.id}`}>\n            <div className=\"aspect-[4/3] relative overflow-hidden rounded-t-xl\">\n              {product.imageUrl ? (\n                <img \n                  src={product.imageUrl} \n                  alt={product.name}\n                  className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                />\n              ) : (\n                <div className=\"w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center\">\n                  <div className=\"text-gray-400 text-center\">\n                    <div className=\"w-12 h-12 mx-auto mb-2 bg-gray-300 rounded\"></div>\n                    <p className=\"text-sm\">Imagen no disponible</p>\n                  </div>\n                </div>\n              )}\n              \n              {/* Overlay badges */}\n              <div className=\"absolute top-3 left-3 flex flex-wrap gap-1\">\n                {product.category === currentProduct.category && (\n                  <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800 text-xs\">\n                    {product.category}\n                  </Badge>\n                )}\n                {product.brand === currentProduct.brand && (\n                  <Badge variant=\"outline\" className=\"bg-white/90 text-gray-700 text-xs\">\n                    {product.brand}\n                  </Badge>\n                )}\n              </div>\n            </div>\n\n            <CardContent className=\"p-4\">\n              <div className=\"space-y-3\">\n                <div>\n                  <h3 className=\"font-semibold text-gray-900 line-clamp-2 text-sm\" data-testid={`text-related-product-name-${product.id}`}>\n                    {product.name}\n                  </h3>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {product.brand} {product.model && `- ${product.model}`}\n                  </p>\n                  {product.code && (\n                    <p className=\"text-xs text-gray-400\">Código: {product.code}</p>\n                  )}\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-bold text-gray-900 text-sm\" data-testid={`text-related-product-price-${product.id}`}>\n                    {formatPrice(product.priceCents, product.currency || 'CLP')}\n                  </span>\n                  {product.availability === 'available' && (\n                    <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200 text-xs\">\n                      Disponible\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Link href={`/product/${product.id}`} className=\"flex-1\">\n                    <Button variant=\"outline\" size=\"sm\" className=\"w-full text-xs\" data-testid={`button-view-related-${product.id}`}>\n                      <Eye className=\"w-3 h-3 mr-1\" />\n                      Ver\n                    </Button>\n                  </Link>\n                  <QuoteRequestModal \n                    product={product}\n                    trigger={\n                      <Button size=\"sm\" className=\"sumerica-yellow text-xs px-2\" data-testid={`button-quote-related-${product.id}`}>\n                        <MessageCircle className=\"w-3 h-3\" />\n                      </Button>\n                    }\n                  />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Show more link if there might be more products */}\n      {allProducts && allProducts.length > maxProducts + 1 && (\n        <div className=\"text-center mt-8\">\n          <Link href=\"/catalog\">\n            <Button variant=\"outline\" size=\"lg\" data-testid=\"button-view-all-products\">\n              Ver todos los productos\n            </Button>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":7660},"README.md":{"content":"# sumericaweb2\n","size_bytes":15}},"version":1}